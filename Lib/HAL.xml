<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>HAL</name>
  </assembly>
  <members>
    <member name="T:HAL.Base.CTR_Code"></member>
    <member name="T:HAL.Base.HAL"></member>
    <member name="M:HAL.Base.HAL.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HAL</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HAL.HAL_GetBrownedOut"></member>
    <member name="M:HAL.Base.HAL.HAL_GetErrorMessage(System.Int32)">
      <summary>
            Gets an Error Message from the HAL
            </summary>
      <param name="code">The Error Code</param>
      <returns>The Error Message</returns>
    </member>
    <member name="F:HAL.Base.HAL.HAL_GetFPGAButton"></member>
    <member name="F:HAL.Base.HAL.HAL_GetFPGARevision"></member>
    <member name="F:HAL.Base.HAL.HAL_GetFPGATime"></member>
    <member name="F:HAL.Base.HAL.HAL_GetFPGAVersion"></member>
    <member name="F:HAL.Base.HAL.HAL_GetPort"></member>
    <member name="F:HAL.Base.HAL.HAL_GetPortWithModule"></member>
    <member name="F:HAL.Base.HAL.HAL_GetRuntimeType"></member>
    <member name="F:HAL.Base.HAL.HAL_GetSystemActive"></member>
    <member name="F:HAL.Base.HAL.HAL_Initialize"></member>
    <member name="M:HAL.Base.HAL.HAL_Report(System.Int32,System.Int32,System.Int32,System.String)"></member>
    <member name="F:HAL.Base.HAL.HALInvalidHandle"></member>
    <member name="M:HAL.Base.HAL.Initialize(System.Int32)">
      <summary>
            HAL Initialization. Must be called before any other HAL functions.
            </summary>
      <param name="mode">Initialization Mode</param>
    </member>
    <member name="M:HAL.Base.HAL.Ping">
      <summary>
            Use this to force load the definitions in the file
            </summary>
    </member>
    <member name="M:HAL.Base.HAL.PingAll"></member>
    <member name="M:HAL.Base.HAL.Report(HAL.Base.ResourceType,HAL.Base.Instances,System.Int32,System.String)"></member>
    <member name="M:HAL.Base.HAL.Report(HAL.Base.ResourceType,System.Int32,System.Int32,System.String)"></member>
    <member name="M:HAL.Base.HAL.Report(System.Int32,HAL.Base.Instances,System.Int32,System.String)"></member>
    <member name="M:HAL.Base.HAL.Report(System.Int32,System.Int32,System.Int32,System.String)"></member>
    <member name="T:HAL.Base.HAL.DriverStationConstants"></member>
    <member name="M:HAL.Base.HAL.DriverStationConstants.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HAL.DriverStationConstants</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HAL.DriverStationConstants.JoystickPorts"></member>
    <member name="F:HAL.Base.HAL.DriverStationConstants.MaxJoystickAxes"></member>
    <member name="F:HAL.Base.HAL.DriverStationConstants.MaxJoystickPOVs"></member>
    <member name="T:HAL.Base.HAL.HAL_GetBrownedOutDelegate"></member>
    <member name="T:HAL.Base.HAL.HAL_GetFPGAButtonDelegate"></member>
    <member name="T:HAL.Base.HAL.HAL_GetFPGARevisionDelegate"></member>
    <member name="T:HAL.Base.HAL.HAL_GetFPGATimeDelegate"></member>
    <member name="T:HAL.Base.HAL.HAL_GetFPGAVersionDelegate"></member>
    <member name="T:HAL.Base.HAL.HAL_GetPortDelegate"></member>
    <member name="T:HAL.Base.HAL.HAL_GetPortWithModuleDelegate"></member>
    <member name="T:HAL.Base.HAL.HAL_GetRuntimeTypeDelegate"></member>
    <member name="T:HAL.Base.HAL.HAL_GetSystemActiveDelegate"></member>
    <member name="T:HAL.Base.HAL.HAL_InitializeDelegate"></member>
    <member name="T:HAL.Base.HALAccelerometer"></member>
    <member name="M:HAL.Base.HALAccelerometer.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALAccelerometer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALAccelerometer.HAL_GetAccelerometerX"></member>
    <member name="F:HAL.Base.HALAccelerometer.HAL_GetAccelerometerY"></member>
    <member name="F:HAL.Base.HALAccelerometer.HAL_GetAccelerometerZ"></member>
    <member name="F:HAL.Base.HALAccelerometer.HAL_SetAccelerometerActive"></member>
    <member name="F:HAL.Base.HALAccelerometer.HAL_SetAccelerometerRange"></member>
    <member name="M:HAL.Base.HALAccelerometer.Ping"></member>
    <member name="T:HAL.Base.HALAccelerometer.HAL_GetAccelerometerXDelegate"></member>
    <member name="T:HAL.Base.HALAccelerometer.HAL_GetAccelerometerYDelegate"></member>
    <member name="T:HAL.Base.HALAccelerometer.HAL_GetAccelerometerZDelegate"></member>
    <member name="T:HAL.Base.HALAccelerometer.HAL_SetAccelerometerActiveDelegate"></member>
    <member name="T:HAL.Base.HALAccelerometer.HAL_SetAccelerometerRangeDelegate"></member>
    <member name="T:HAL.Base.HALAccelerometerRange"></member>
    <member name="T:HAL.Base.HALAllianceStationID">
      <summary></summary>
    </member>
    <member name="F:HAL.Base.HALAllianceStationID.HALAllianceStationID_red1">
      <summary>
            Red 1 Station
            </summary>
    </member>
    <member name="F:HAL.Base.HALAllianceStationID.HALAllianceStationID_red2">
      <summary>
            Red 2 Station
            </summary>
    </member>
    <member name="F:HAL.Base.HALAllianceStationID.HALAllianceStationID_red3">
      <summary>
            Red 3 Station
            </summary>
    </member>
    <member name="F:HAL.Base.HALAllianceStationID.HALAllianceStationID_blue1">
      <summary>
            Blue 1 Stations
            </summary>
    </member>
    <member name="F:HAL.Base.HALAllianceStationID.HALAllianceStationID_blue2">
      <summary>
            Blue 2 Stations
            </summary>
    </member>
    <member name="F:HAL.Base.HALAllianceStationID.HALAllianceStationID_blue3">
      <summary>
            Blue 3 Station
            </summary>
    </member>
    <member name="T:HAL.Base.HALAllowNonBlittable">
      <summary>
            This attributes are placed on strings we want to force be allowed in the impl test.
            </summary>
    </member>
    <member name="M:HAL.Base.HALAllowNonBlittable.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALAllowNonBlittable</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:HAL.Base.HALAnalogAccumulator"></member>
    <member name="M:HAL.Base.HALAnalogAccumulator.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALAnalogAccumulator</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALAnalogAccumulator.HAL_GetAccumulatorCount"></member>
    <member name="F:HAL.Base.HALAnalogAccumulator.HAL_GetAccumulatorOutput"></member>
    <member name="F:HAL.Base.HALAnalogAccumulator.HAL_GetAccumulatorValue"></member>
    <member name="F:HAL.Base.HALAnalogAccumulator.HAL_InitAccumulator"></member>
    <member name="F:HAL.Base.HALAnalogAccumulator.HAL_IsAccumulatorChannel"></member>
    <member name="F:HAL.Base.HALAnalogAccumulator.HAL_ResetAccumulator"></member>
    <member name="F:HAL.Base.HALAnalogAccumulator.HAL_SetAccumulatorCenter"></member>
    <member name="F:HAL.Base.HALAnalogAccumulator.HAL_SetAccumulatorDeadband"></member>
    <member name="M:HAL.Base.HALAnalogAccumulator.Ping"></member>
    <member name="T:HAL.Base.HALAnalogAccumulator.HAL_GetAccumulatorCountDelegate"></member>
    <member name="T:HAL.Base.HALAnalogAccumulator.HAL_GetAccumulatorOutputDelegate"></member>
    <member name="T:HAL.Base.HALAnalogAccumulator.HAL_GetAccumulatorValueDelegate"></member>
    <member name="T:HAL.Base.HALAnalogAccumulator.HAL_InitAccumulatorDelegate"></member>
    <member name="T:HAL.Base.HALAnalogAccumulator.HAL_IsAccumulatorChannelDelegate"></member>
    <member name="T:HAL.Base.HALAnalogAccumulator.HAL_ResetAccumulatorDelegate"></member>
    <member name="T:HAL.Base.HALAnalogAccumulator.HAL_SetAccumulatorCenterDelegate"></member>
    <member name="T:HAL.Base.HALAnalogAccumulator.HAL_SetAccumulatorDeadbandDelegate"></member>
    <member name="T:HAL.Base.HALAnalogGyro"></member>
    <member name="M:HAL.Base.HALAnalogGyro.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALAnalogGyro</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALAnalogGyro.HAL_CalibrateAnalogGyro"></member>
    <member name="F:HAL.Base.HALAnalogGyro.HAL_FreeAnalogGyro"></member>
    <member name="F:HAL.Base.HALAnalogGyro.HAL_GetAnalogGyroAngle"></member>
    <member name="F:HAL.Base.HALAnalogGyro.HAL_GetAnalogGyroCenter"></member>
    <member name="F:HAL.Base.HALAnalogGyro.HAL_GetAnalogGyroOffset"></member>
    <member name="F:HAL.Base.HALAnalogGyro.HAL_GetAnalogGyroRate"></member>
    <member name="F:HAL.Base.HALAnalogGyro.HAL_InitializeAnalogGyro"></member>
    <member name="F:HAL.Base.HALAnalogGyro.HAL_ResetAnalogGyro"></member>
    <member name="F:HAL.Base.HALAnalogGyro.HAL_SetAnalogGyroDeadband"></member>
    <member name="F:HAL.Base.HALAnalogGyro.HAL_SetAnalogGyroParameters"></member>
    <member name="F:HAL.Base.HALAnalogGyro.HAL_SetAnalogGyroVoltsPerDegreePerSecond"></member>
    <member name="F:HAL.Base.HALAnalogGyro.HAL_SetupAnalogGyro"></member>
    <member name="M:HAL.Base.HALAnalogGyro.Ping"></member>
    <member name="T:HAL.Base.HALAnalogGyro.HAL_CalibrateAnalogGyroDelegate"></member>
    <member name="T:HAL.Base.HALAnalogGyro.HAL_FreeAnalogGyroDelegate"></member>
    <member name="T:HAL.Base.HALAnalogGyro.HAL_GetAnalogGyroAngleDelegate"></member>
    <member name="T:HAL.Base.HALAnalogGyro.HAL_GetAnalogGyroCenterDelegate"></member>
    <member name="T:HAL.Base.HALAnalogGyro.HAL_GetAnalogGyroOffsetDelegate"></member>
    <member name="T:HAL.Base.HALAnalogGyro.HAL_GetAnalogGyroRateDelegate"></member>
    <member name="T:HAL.Base.HALAnalogGyro.HAL_InitializeAnalogGyroDelegate"></member>
    <member name="T:HAL.Base.HALAnalogGyro.HAL_ResetAnalogGyroDelegate"></member>
    <member name="T:HAL.Base.HALAnalogGyro.HAL_SetAnalogGyroDeadbandDelegate"></member>
    <member name="T:HAL.Base.HALAnalogGyro.HAL_SetAnalogGyroParametersDelegate"></member>
    <member name="T:HAL.Base.HALAnalogGyro.HAL_SetAnalogGyroVoltsPerDegreePerSecondDelegate"></member>
    <member name="T:HAL.Base.HALAnalogGyro.HAL_SetupAnalogGyroDelegate"></member>
    <member name="T:HAL.Base.HALAnalogInput"></member>
    <member name="M:HAL.Base.HALAnalogInput.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALAnalogInput</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALAnalogInput.HAL_CheckAnalogInputChannel"></member>
    <member name="F:HAL.Base.HALAnalogInput.HAL_CheckAnalogModule"></member>
    <member name="F:HAL.Base.HALAnalogInput.HAL_FreeAnalogInputPort"></member>
    <member name="F:HAL.Base.HALAnalogInput.HAL_GetAnalogAverageBits"></member>
    <member name="F:HAL.Base.HALAnalogInput.HAL_GetAnalogAverageValue"></member>
    <member name="F:HAL.Base.HALAnalogInput.HAL_GetAnalogAverageVoltage"></member>
    <member name="F:HAL.Base.HALAnalogInput.HAL_GetAnalogLSBWeight"></member>
    <member name="F:HAL.Base.HALAnalogInput.HAL_GetAnalogOffset"></member>
    <member name="F:HAL.Base.HALAnalogInput.HAL_GetAnalogOversampleBits"></member>
    <member name="F:HAL.Base.HALAnalogInput.HAL_GetAnalogSampleRate"></member>
    <member name="F:HAL.Base.HALAnalogInput.HAL_GetAnalogValue"></member>
    <member name="F:HAL.Base.HALAnalogInput.HAL_GetAnalogVoltage"></member>
    <member name="F:HAL.Base.HALAnalogInput.HAL_GetAnalogVoltsToValue"></member>
    <member name="F:HAL.Base.HALAnalogInput.HAL_InitializeAnalogInputPort"></member>
    <member name="F:HAL.Base.HALAnalogInput.HAL_SetAnalogAverageBits"></member>
    <member name="F:HAL.Base.HALAnalogInput.HAL_SetAnalogOversampleBits"></member>
    <member name="F:HAL.Base.HALAnalogInput.HAL_SetAnalogSampleRate"></member>
    <member name="M:HAL.Base.HALAnalogInput.Ping"></member>
    <member name="T:HAL.Base.HALAnalogInput.HAL_CheckAnalogInputChannelDelegate"></member>
    <member name="T:HAL.Base.HALAnalogInput.HAL_CheckAnalogModuleDelegate"></member>
    <member name="T:HAL.Base.HALAnalogInput.HAL_FreeAnalogInputPortDelegate"></member>
    <member name="T:HAL.Base.HALAnalogInput.HAL_GetAnalogAverageBitsDelegate"></member>
    <member name="T:HAL.Base.HALAnalogInput.HAL_GetAnalogAverageValueDelegate"></member>
    <member name="T:HAL.Base.HALAnalogInput.HAL_GetAnalogAverageVoltageDelegate"></member>
    <member name="T:HAL.Base.HALAnalogInput.HAL_GetAnalogLSBWeightDelegate"></member>
    <member name="T:HAL.Base.HALAnalogInput.HAL_GetAnalogOffsetDelegate"></member>
    <member name="T:HAL.Base.HALAnalogInput.HAL_GetAnalogOversampleBitsDelegate"></member>
    <member name="T:HAL.Base.HALAnalogInput.HAL_GetAnalogSampleRateDelegate"></member>
    <member name="T:HAL.Base.HALAnalogInput.HAL_GetAnalogValueDelegate"></member>
    <member name="T:HAL.Base.HALAnalogInput.HAL_GetAnalogVoltageDelegate"></member>
    <member name="T:HAL.Base.HALAnalogInput.HAL_GetAnalogVoltsToValueDelegate"></member>
    <member name="T:HAL.Base.HALAnalogInput.HAL_InitializeAnalogInputPortDelegate"></member>
    <member name="T:HAL.Base.HALAnalogInput.HAL_SetAnalogAverageBitsDelegate"></member>
    <member name="T:HAL.Base.HALAnalogInput.HAL_SetAnalogOversampleBitsDelegate"></member>
    <member name="T:HAL.Base.HALAnalogInput.HAL_SetAnalogSampleRateDelegate"></member>
    <member name="T:HAL.Base.HALAnalogOutput"></member>
    <member name="M:HAL.Base.HALAnalogOutput.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALAnalogOutput</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALAnalogOutput.HAL_CheckAnalogOutputChannel"></member>
    <member name="F:HAL.Base.HALAnalogOutput.HAL_FreeAnalogOutputPort"></member>
    <member name="F:HAL.Base.HALAnalogOutput.HAL_GetAnalogOutput"></member>
    <member name="F:HAL.Base.HALAnalogOutput.HAL_InitializeAnalogOutputPort"></member>
    <member name="F:HAL.Base.HALAnalogOutput.HAL_SetAnalogOutput"></member>
    <member name="M:HAL.Base.HALAnalogOutput.Ping"></member>
    <member name="T:HAL.Base.HALAnalogOutput.HAL_CheckAnalogOutputChannelDelegate"></member>
    <member name="T:HAL.Base.HALAnalogOutput.HAL_FreeAnalogOutputPortDelegate"></member>
    <member name="T:HAL.Base.HALAnalogOutput.HAL_GetAnalogOutputDelegate"></member>
    <member name="T:HAL.Base.HALAnalogOutput.HAL_InitializeAnalogOutputPortDelegate"></member>
    <member name="T:HAL.Base.HALAnalogOutput.HAL_SetAnalogOutputDelegate"></member>
    <member name="T:HAL.Base.HALAnalogTrigger"></member>
    <member name="M:HAL.Base.HALAnalogTrigger.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALAnalogTrigger</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALAnalogTrigger.HAL_CleanAnalogTrigger"></member>
    <member name="F:HAL.Base.HALAnalogTrigger.HAL_GetAnalogTriggerInWindow"></member>
    <member name="F:HAL.Base.HALAnalogTrigger.HAL_GetAnalogTriggerOutput"></member>
    <member name="F:HAL.Base.HALAnalogTrigger.HAL_GetAnalogTriggerTriggerState"></member>
    <member name="F:HAL.Base.HALAnalogTrigger.HAL_InitializeAnalogTrigger"></member>
    <member name="F:HAL.Base.HALAnalogTrigger.HAL_SetAnalogTriggerAveraged"></member>
    <member name="F:HAL.Base.HALAnalogTrigger.HAL_SetAnalogTriggerFiltered"></member>
    <member name="F:HAL.Base.HALAnalogTrigger.HAL_SetAnalogTriggerLimitsRaw"></member>
    <member name="F:HAL.Base.HALAnalogTrigger.HAL_SetAnalogTriggerLimitsVoltage"></member>
    <member name="M:HAL.Base.HALAnalogTrigger.Ping"></member>
    <member name="T:HAL.Base.HALAnalogTrigger.HAL_CleanAnalogTriggerDelegate"></member>
    <member name="T:HAL.Base.HALAnalogTrigger.HAL_GetAnalogTriggerInWindowDelegate"></member>
    <member name="T:HAL.Base.HALAnalogTrigger.HAL_GetAnalogTriggerOutputDelegate"></member>
    <member name="T:HAL.Base.HALAnalogTrigger.HAL_GetAnalogTriggerTriggerStateDelegate"></member>
    <member name="T:HAL.Base.HALAnalogTrigger.HAL_InitializeAnalogTriggerDelegate"></member>
    <member name="T:HAL.Base.HALAnalogTrigger.HAL_SetAnalogTriggerAveragedDelegate"></member>
    <member name="T:HAL.Base.HALAnalogTrigger.HAL_SetAnalogTriggerFilteredDelegate"></member>
    <member name="T:HAL.Base.HALAnalogTrigger.HAL_SetAnalogTriggerLimitsRawDelegate"></member>
    <member name="T:HAL.Base.HALAnalogTrigger.HAL_SetAnalogTriggerLimitsVoltageDelegate"></member>
    <member name="T:HAL.Base.HALAnalogTriggerType"></member>
    <member name="T:HAL.Base.HALCAN"></member>
    <member name="M:HAL.Base.HALCAN.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALCAN</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALCAN.FRC_NetworkCommunication_CANSessionMux_closeStreamSession"></member>
    <member name="F:HAL.Base.HALCAN.FRC_NetworkCommunication_CANSessionMux_openStreamSession"></member>
    <member name="F:HAL.Base.HALCAN.FRC_NetworkCommunication_CANSessionMux_readStreamSession"></member>
    <member name="F:HAL.Base.HALCAN.FRC_NetworkCommunication_CANSessionMux_receiveMessage"></member>
    <member name="F:HAL.Base.HALCAN.FRC_NetworkCommunication_CANSessionMux_sendMessage"></member>
    <member name="M:HAL.Base.HALCAN.Ping"></member>
    <member name="T:HAL.Base.HALCAN.Constants"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_API_MC_ACK"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_API_MC_CFG"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_API_MC_ICTRL"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_API_MC_POS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_API_MC_PSTAT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_API_MC_SPD"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_API_MC_STATUS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_API_MC_VCOMP"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_API_MC_VOLTAGE"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_IS_FRAME_11BIT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_IS_FRAME_REMOTE"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_API_CLASS_M"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_API_DEVASSIGN"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_API_DEVQUERY"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_API_ENUMERATE"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_API_FIRMVER"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_API_HEARTBEAT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_API_ID_M"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_API_M"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_API_S"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_API_SYNC"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_API_SYSHALT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_API_SYSRESUME"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_API_SYSRST"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_API_UPDATE"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_DEVNO_BCAST"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_DEVNO_M"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_DEVNO_S"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_DTYPE_ACCEL"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_DTYPE_BCAST"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_DTYPE_GEART"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_DTYPE_GYRO"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_DTYPE_M"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_DTYPE_MOTOR"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_DTYPE_RELAY"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_DTYPE_ROBOT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_DTYPE_S"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_DTYPE_UPDATE"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_DTYPE_USONIC"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_FULL_M"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_MFR_DEKA"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_MFR_LM"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_MFR_M"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_MFR_NI"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_MFR_S"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_SEND_PERIOD_NO_REPEAT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_SEND_PERIOD_STOP_REPEATING"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_STATUS_CODE_M"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_STATUS_CODE_S"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_STATUS_DTYPE_M"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_STATUS_DTYPE_S"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_STATUS_MFG_M"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_STATUS_MFG_S"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_ACK"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_CFG"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_CFG_BRAKE_COAST"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_CFG_ENC_LINES"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_CFG_FAULT_TIME"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_CFG_LIMIT_FWD"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_CFG_LIMIT_MODE"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_CFG_LIMIT_REV"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_CFG_MAX_VOUT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_CFG_NUM_BRUSHES"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_CFG_POT_TURNS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_HWVER"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_ICTRL"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_ICTRL_DC"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_ICTRL_DIS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_ICTRL_EN"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_ICTRL_IC"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_ICTRL_PC"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_ICTRL_SET"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_ICTRL_SET_NO_ACK"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_ICTRL_T_EN"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_ICTRL_T_SET"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_ICTRL_T_SET_NO_ACK"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_POS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_POS_DC"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_POS_DIS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_POS_EN"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_POS_IC"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_POS_PC"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_POS_REF"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_POS_SET"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_POS_SET_NO_ACK"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_POS_T_EN"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_POS_T_SET"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_POS_T_SET_NO_ACK"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_PSTAT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_PSTAT_CFG_S0"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_PSTAT_CFG_S1"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_PSTAT_CFG_S2"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_PSTAT_CFG_S3"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_PSTAT_DATA_S0"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_PSTAT_DATA_S1"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_PSTAT_DATA_S2"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_PSTAT_DATA_S3"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_PSTAT_PER_EN_S0"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_PSTAT_PER_EN_S1"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_PSTAT_PER_EN_S2"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_PSTAT_PER_EN_S3"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_SPD"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_SPD_DC"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_SPD_DIS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_SPD_EN"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_SPD_IC"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_SPD_PC"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_SPD_REF"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_SPD_SET"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_SPD_SET_NO_ACK"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_SPD_T_EN"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_SPD_T_SET"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_SPD_T_SET_NO_ACK"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_STATUS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_STATUS_CMODE"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_STATUS_CURRENT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_STATUS_FAULT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_STATUS_FLT_COUNT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_STATUS_LIMIT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_STATUS_POS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_STATUS_POWER"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_STATUS_SPD"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_STATUS_STKY_FLT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_STATUS_TEMP"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_STATUS_VOLTBUS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_STATUS_VOLTOUT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_STATUS_VOUT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_SYNC_PEND_NOW"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_TRUST_EN"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_TRUST_HEARTBEAT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_UNTRUST_EN"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_UPD"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_UPD_ACK"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_UPD_DOWNLOAD"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_UPD_PING"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_UPD_REQUEST"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_UPD_RESET"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_UPD_SEND_DATA"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VCOMP"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VCOMP_COMP_RAMP"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VCOMP_DIS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VCOMP_EN"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VCOMP_IN_RAMP"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VCOMP_SET"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VCOMP_SET_NO_ACK"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VCOMP_T_EN"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VCOMP_T_SET"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VCOMP_T_SET_NO_ACK"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VOLT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VOLT_DIS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VOLT_EN"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VOLT_RAMP_DIS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VOLT_SET"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VOLT_SET_NO_ACK"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VOLT_SET_RAMP"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VOLT_T_EN"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VOLT_T_SET"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VOLT_T_SET_NO_ACK"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_FAULT_COMM"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_FAULT_CURRENT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_FAULT_GATE_DRIVE"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_FAULT_TEMP"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_FAULT_VBUS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_HWVER_JAG_1_0"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_HWVER_JAG_2_0"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_HWVER_UNKNOWN"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_CANERR_B0"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_CANERR_B1"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_CANSTS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_CURRENT_B0"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_CURRENT_B1"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_END"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_FAULT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_FLT_COUNT_COMM"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_FLT_COUNT_CURRENT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_FLT_COUNT_GATE"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_FLT_COUNT_TEMP"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_FLT_COUNT_VOLTBUS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_LIMIT_CLR"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_LIMIT_NCLR"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_POS_B0"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_POS_B1"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_POS_B2"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_POS_B3"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_SPD_B0"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_SPD_B1"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_SPD_B2"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_SPD_B3"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_STKY_FLT_CLR"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_STKY_FLT_NCLR"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_TEMP_B0"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_TEMP_B1"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_VOLTBUS_B0"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_VOLTBUS_B1"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_VOLTOUT_B0"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_VOLTOUT_B1"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_VOUT_B0"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_VOUT_B1"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_REF_ENCODER"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_REF_INV_ENCODER"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_REF_NONE"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_REF_POT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_REF_QUAD_ENCODER"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_CMODE_CURRENT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_CMODE_POS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_CMODE_SPEED"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_CMODE_VCOMP"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_CMODE_VOLT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_FAULT_ILIMIT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_FAULT_TLIMIT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_FAULT_VLIMIT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_LIMIT_FWD"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_LIMIT_REV"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_LIMIT_SFWD"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_LIMIT_SREV"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_LIMIT_STKY_FWD"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_LIMIT_STKY_REV"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_LIMIT_STKY_SFWD"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_LIMIT_STKY_SREV"></member>
    <member name="T:HAL.Base.HALCAN.FRC_NetworkCommunication_CANSessionMux_closeStreamSessionDelegate"></member>
    <member name="T:HAL.Base.HALCAN.FRC_NetworkCommunication_CANSessionMux_openStreamSessionDelegate"></member>
    <member name="T:HAL.Base.HALCAN.FRC_NetworkCommunication_CANSessionMux_readStreamSessionDelegate"></member>
    <member name="T:HAL.Base.HALCAN.FRC_NetworkCommunication_CANSessionMux_receiveMessageDelegate"></member>
    <member name="T:HAL.Base.HALCAN.FRC_NetworkCommunication_CANSessionMux_sendMessageDelegate"></member>
    <member name="T:HAL.Base.HALCompressor"></member>
    <member name="M:HAL.Base.HALCompressor.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALCompressor</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALCompressor.HAL_CheckCompressorModule"></member>
    <member name="F:HAL.Base.HALCompressor.HAL_GetCompressor"></member>
    <member name="F:HAL.Base.HALCompressor.HAL_GetCompressorClosedLoopControl"></member>
    <member name="F:HAL.Base.HALCompressor.HAL_GetCompressorCurrent"></member>
    <member name="F:HAL.Base.HALCompressor.HAL_GetCompressorCurrentTooHighFault"></member>
    <member name="F:HAL.Base.HALCompressor.HAL_GetCompressorCurrentTooHighStickyFault"></member>
    <member name="F:HAL.Base.HALCompressor.HAL_GetCompressorNotConnectedFault"></member>
    <member name="F:HAL.Base.HALCompressor.HAL_GetCompressorNotConnectedStickyFault"></member>
    <member name="F:HAL.Base.HALCompressor.HAL_GetCompressorPressureSwitch"></member>
    <member name="F:HAL.Base.HALCompressor.HAL_GetCompressorShortedFault"></member>
    <member name="F:HAL.Base.HALCompressor.HAL_GetCompressorShortedStickyFault"></member>
    <member name="F:HAL.Base.HALCompressor.HAL_InitializeCompressor"></member>
    <member name="F:HAL.Base.HALCompressor.HAL_SetCompressorClosedLoopControl"></member>
    <member name="M:HAL.Base.HALCompressor.Ping">
      <summary>
            Use this to force load the definitions in the file
            </summary>
    </member>
    <member name="T:HAL.Base.HALCompressor.HAL_CheckCompressorModuleDelegate"></member>
    <member name="T:HAL.Base.HALCompressor.HAL_GetCompressorClosedLoopControlDelegate"></member>
    <member name="T:HAL.Base.HALCompressor.HAL_GetCompressorCurrentDelegate"></member>
    <member name="T:HAL.Base.HALCompressor.HAL_GetCompressorCurrentTooHighFaultDelegate"></member>
    <member name="T:HAL.Base.HALCompressor.HAL_GetCompressorCurrentTooHighStickyFaultDelegate"></member>
    <member name="T:HAL.Base.HALCompressor.HAL_GetCompressorDelegate"></member>
    <member name="T:HAL.Base.HALCompressor.HAL_GetCompressorNotConnectedFaultDelegate"></member>
    <member name="T:HAL.Base.HALCompressor.HAL_GetCompressorNotConnectedStickyFaultDelegate"></member>
    <member name="T:HAL.Base.HALCompressor.HAL_GetCompressorPressureSwitchDelegate"></member>
    <member name="T:HAL.Base.HALCompressor.HAL_GetCompressorShortedFaultDelegate"></member>
    <member name="T:HAL.Base.HALCompressor.HAL_GetCompressorShortedStickyFaultDelegate"></member>
    <member name="T:HAL.Base.HALCompressor.HAL_InitializeCompressorDelegate"></member>
    <member name="T:HAL.Base.HALCompressor.HAL_SetCompressorClosedLoopControlDelegate"></member>
    <member name="T:HAL.Base.HALConstants"></member>
    <member name="M:HAL.Base.HALConstants.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALConstants</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALConstants.HAL_GetSystemClockTicksPerMicrosecond"></member>
    <member name="M:HAL.Base.HALConstants.Ping">
      <summary>
            Use this to force load the definitions in the file
            </summary>
    </member>
    <member name="T:HAL.Base.HALConstants.HAL_GetSystemClockTicksPerMicrosecondDelegate"></member>
    <member name="T:HAL.Base.HALControlWord"></member>
    <member name="M:HAL.Base.HALControlWord.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALControlWord</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Base.HALControlWord.GetAutonomous"></member>
    <member name="M:HAL.Base.HALControlWord.GetDSAttached"></member>
    <member name="M:HAL.Base.HALControlWord.GetEnabled"></member>
    <member name="M:HAL.Base.HALControlWord.GetEStop"></member>
    <member name="M:HAL.Base.HALControlWord.GetFMSAttached"></member>
    <member name="M:HAL.Base.HALControlWord.GetTest"></member>
    <member name="T:HAL.Base.HALCounter"></member>
    <member name="M:HAL.Base.HALCounter.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALCounter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALCounter.HAL_ClearCounterDownSource"></member>
    <member name="F:HAL.Base.HALCounter.HAL_ClearCounterUpSource"></member>
    <member name="F:HAL.Base.HALCounter.HAL_FreeCounter"></member>
    <member name="F:HAL.Base.HALCounter.HAL_GetCounter"></member>
    <member name="F:HAL.Base.HALCounter.HAL_GetCounterDirection"></member>
    <member name="F:HAL.Base.HALCounter.HAL_GetCounterPeriod"></member>
    <member name="F:HAL.Base.HALCounter.HAL_GetCounterSamplesToAverage"></member>
    <member name="F:HAL.Base.HALCounter.HAL_GetCounterStopped"></member>
    <member name="F:HAL.Base.HALCounter.HAL_InitializeCounter"></member>
    <member name="F:HAL.Base.HALCounter.HAL_ResetCounter"></member>
    <member name="F:HAL.Base.HALCounter.HAL_SetCounterAverageSize"></member>
    <member name="F:HAL.Base.HALCounter.HAL_SetCounterDownSource"></member>
    <member name="F:HAL.Base.HALCounter.HAL_SetCounterDownSourceEdge"></member>
    <member name="F:HAL.Base.HALCounter.HAL_SetCounterExternalDirectionMode"></member>
    <member name="F:HAL.Base.HALCounter.HAL_SetCounterMaxPeriod"></member>
    <member name="F:HAL.Base.HALCounter.HAL_SetCounterPulseLengthMode"></member>
    <member name="F:HAL.Base.HALCounter.HAL_SetCounterReverseDirection"></member>
    <member name="F:HAL.Base.HALCounter.HAL_SetCounterSamplesToAverage"></member>
    <member name="F:HAL.Base.HALCounter.HAL_SetCounterSemiPeriodMode"></member>
    <member name="F:HAL.Base.HALCounter.HAL_SetCounterUpdateWhenEmpty"></member>
    <member name="F:HAL.Base.HALCounter.HAL_SetCounterUpDownMode"></member>
    <member name="F:HAL.Base.HALCounter.HAL_SetCounterUpSource"></member>
    <member name="F:HAL.Base.HALCounter.HAL_SetCounterUpSourceEdge"></member>
    <member name="M:HAL.Base.HALCounter.Ping">
      <summary>
            Use this to force load the definitions in the file
            </summary>
    </member>
    <member name="T:HAL.Base.HALCounter.HAL_ClearCounterDownSourceDelegate"></member>
    <member name="T:HAL.Base.HALCounter.HAL_ClearCounterUpSourceDelegate"></member>
    <member name="T:HAL.Base.HALCounter.HAL_FreeCounterDelegate"></member>
    <member name="T:HAL.Base.HALCounter.HAL_GetCounterDelegate"></member>
    <member name="T:HAL.Base.HALCounter.HAL_GetCounterDirectionDelegate"></member>
    <member name="T:HAL.Base.HALCounter.HAL_GetCounterPeriodDelegate"></member>
    <member name="T:HAL.Base.HALCounter.HAL_GetCounterSamplesToAverageDelegate"></member>
    <member name="T:HAL.Base.HALCounter.HAL_GetCounterStoppedDelegate"></member>
    <member name="T:HAL.Base.HALCounter.HAL_InitializeCounterDelegate"></member>
    <member name="T:HAL.Base.HALCounter.HAL_ResetCounterDelegate"></member>
    <member name="T:HAL.Base.HALCounter.HAL_SetCounterAverageSizeDelegate"></member>
    <member name="T:HAL.Base.HALCounter.HAL_SetCounterDownSourceDelegate"></member>
    <member name="T:HAL.Base.HALCounter.HAL_SetCounterDownSourceEdgeDelegate"></member>
    <member name="T:HAL.Base.HALCounter.HAL_SetCounterExternalDirectionModeDelegate"></member>
    <member name="T:HAL.Base.HALCounter.HAL_SetCounterMaxPeriodDelegate"></member>
    <member name="T:HAL.Base.HALCounter.HAL_SetCounterPulseLengthModeDelegate"></member>
    <member name="T:HAL.Base.HALCounter.HAL_SetCounterReverseDirectionDelegate"></member>
    <member name="T:HAL.Base.HALCounter.HAL_SetCounterSamplesToAverageDelegate"></member>
    <member name="T:HAL.Base.HALCounter.HAL_SetCounterSemiPeriodModeDelegate"></member>
    <member name="T:HAL.Base.HALCounter.HAL_SetCounterUpdateWhenEmptyDelegate"></member>
    <member name="T:HAL.Base.HALCounter.HAL_SetCounterUpDownModeDelegate"></member>
    <member name="T:HAL.Base.HALCounter.HAL_SetCounterUpSourceDelegate"></member>
    <member name="T:HAL.Base.HALCounter.HAL_SetCounterUpSourceEdgeDelegate"></member>
    <member name="T:HAL.Base.HALCounterMode"></member>
    <member name="T:HAL.Base.HALDIO"></member>
    <member name="M:HAL.Base.HALDIO.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALDIO</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALDIO.HAL_AllocateDigitalPWM"></member>
    <member name="F:HAL.Base.HALDIO.HAL_CheckDIOChannel"></member>
    <member name="F:HAL.Base.HALDIO.HAL_FreeDigitalPWM"></member>
    <member name="F:HAL.Base.HALDIO.HAL_FreeDIOPort"></member>
    <member name="F:HAL.Base.HALDIO.HAL_GetDIO"></member>
    <member name="F:HAL.Base.HALDIO.HAL_GetDIODirection"></member>
    <member name="F:HAL.Base.HALDIO.HAL_GetFilterPeriod"></member>
    <member name="F:HAL.Base.HALDIO.HAL_GetFilterSelect"></member>
    <member name="F:HAL.Base.HALDIO.HAL_InitializeDIOPort"></member>
    <member name="F:HAL.Base.HALDIO.HAL_IsAnyPulsing"></member>
    <member name="F:HAL.Base.HALDIO.HAL_IsPulsing"></member>
    <member name="F:HAL.Base.HALDIO.HAL_Pulse"></member>
    <member name="F:HAL.Base.HALDIO.HAL_SetDigitalPWMDutyCycle"></member>
    <member name="F:HAL.Base.HALDIO.HAL_SetDigitalPWMOutputChannel"></member>
    <member name="F:HAL.Base.HALDIO.HAL_SetDigitalPWMRate"></member>
    <member name="F:HAL.Base.HALDIO.HAL_SetDIO"></member>
    <member name="F:HAL.Base.HALDIO.HAL_SetFilterPeriod"></member>
    <member name="F:HAL.Base.HALDIO.HAL_SetFilterSelect"></member>
    <member name="M:HAL.Base.HALDIO.Ping">
      <summary>
            Use this to force load the definitions in the file
            </summary>
    </member>
    <member name="T:HAL.Base.HALDIO.HAL_AllocateDigitalPWMDelegate"></member>
    <member name="T:HAL.Base.HALDIO.HAL_CheckDIOChannelChannel"></member>
    <member name="T:HAL.Base.HALDIO.HAL_FreeDigitalPWMDelegate"></member>
    <member name="T:HAL.Base.HALDIO.HAL_FreeDIOPortDelegate"></member>
    <member name="T:HAL.Base.HALDIO.HAL_GetDIODelegate"></member>
    <member name="T:HAL.Base.HALDIO.HAL_GetDIODirectionDelegate"></member>
    <member name="T:HAL.Base.HALDIO.HAL_GetFilterPeriodDelegate"></member>
    <member name="T:HAL.Base.HALDIO.HAL_GetFilterSelectDelegate"></member>
    <member name="T:HAL.Base.HALDIO.HAL_InitializeDIOPortDelegate"></member>
    <member name="T:HAL.Base.HALDIO.HAL_IsAnyPulsingDelegate"></member>
    <member name="T:HAL.Base.HALDIO.HAL_IsPulsingDelegate"></member>
    <member name="T:HAL.Base.HALDIO.HAL_PulseDelegate"></member>
    <member name="T:HAL.Base.HALDIO.HAL_SetDigitalPWMDutyCycleDelegate"></member>
    <member name="T:HAL.Base.HALDIO.HAL_SetDigitalPWMOutputChannelDelegate"></member>
    <member name="T:HAL.Base.HALDIO.HAL_SetDigitalPWMRateDelegate"></member>
    <member name="T:HAL.Base.HALDIO.HAL_SetDIODelegate"></member>
    <member name="T:HAL.Base.HALDIO.HAL_SetFilterPeriodDelegate"></member>
    <member name="T:HAL.Base.HALDIO.HAL_SetFilterSelectDelegate"></member>
    <member name="T:HAL.Base.HALDriverStation"></member>
    <member name="M:HAL.Base.HALDriverStation.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALDriverStation</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALDriverStation.HAL_GetAllianceStation"></member>
    <member name="M:HAL.Base.HALDriverStation.HAL_GetControlWord(HAL.Base.HALControlWord@)">
      <summary>
            Gets the HAL Control Word
            </summary>
      <returns></returns>
    </member>
    <member name="F:HAL.Base.HALDriverStation.HAL_GetJoystickAxes"></member>
    <member name="F:HAL.Base.HALDriverStation.HAL_GetJoystickAxisType"></member>
    <member name="F:HAL.Base.HALDriverStation.HAL_GetJoystickButtons"></member>
    <member name="F:HAL.Base.HALDriverStation.HAL_GetJoystickDescriptor"></member>
    <member name="F:HAL.Base.HALDriverStation.HAL_GetJoystickIsXbox"></member>
    <member name="F:HAL.Base.HALDriverStation.HAL_GetJoystickName"></member>
    <member name="F:HAL.Base.HALDriverStation.HAL_GetJoystickPOVs"></member>
    <member name="F:HAL.Base.HALDriverStation.HAL_GetJoystickType"></member>
    <member name="F:HAL.Base.HALDriverStation.HAL_GetMatchTime"></member>
    <member name="F:HAL.Base.HALDriverStation.HAL_InitializeDriverStation"></member>
    <member name="F:HAL.Base.HALDriverStation.HAL_ObserveUserProgramAutonomous"></member>
    <member name="F:HAL.Base.HALDriverStation.HAL_ObserveUserProgramDisabled"></member>
    <member name="F:HAL.Base.HALDriverStation.HAL_ObserveUserProgramStarting"></member>
    <member name="F:HAL.Base.HALDriverStation.HAL_ObserveUserProgramTeleop"></member>
    <member name="F:HAL.Base.HALDriverStation.HAL_ObserveUserProgramTest"></member>
    <member name="M:HAL.Base.HALDriverStation.HAL_SendError(System.Boolean,System.Int32,System.Boolean,System.String,System.String,System.String,System.Boolean)"></member>
    <member name="M:HAL.Base.HALDriverStation.HAL_SetErrorData(System.String,System.Int32)"></member>
    <member name="F:HAL.Base.HALDriverStation.HAL_SetJoystickOutputs"></member>
    <member name="F:HAL.Base.HALDriverStation.HAL_WaitForDSData"></member>
    <member name="M:HAL.Base.HALDriverStation.Ping">
      <summary>
            Use this to force load the definitions in the file
            </summary>
    </member>
    <member name="T:HAL.Base.HALDriverStation.HAL_GetAllianceStationDelegate"></member>
    <member name="T:HAL.Base.HALDriverStation.HAL_GetJoystickAxesDelegate"></member>
    <member name="T:HAL.Base.HALDriverStation.HAL_GetJoystickAxisTypeDelegate"></member>
    <member name="T:HAL.Base.HALDriverStation.HAL_GetJoystickButtonsDelegate"></member>
    <member name="T:HAL.Base.HALDriverStation.HAL_GetJoystickDescriptorDelegate"></member>
    <member name="T:HAL.Base.HALDriverStation.HAL_GetJoystickIsXboxDelegate"></member>
    <member name="T:HAL.Base.HALDriverStation.HAL_GetJoystickNameDelegate"></member>
    <member name="T:HAL.Base.HALDriverStation.HAL_GetJoystickPOVsDelegate"></member>
    <member name="T:HAL.Base.HALDriverStation.HAL_GetJoystickTypeDelegate"></member>
    <member name="T:HAL.Base.HALDriverStation.HAL_GetMatchTimeDelegate"></member>
    <member name="T:HAL.Base.HALDriverStation.HAL_InitializeDriverStationDelegate"></member>
    <member name="T:HAL.Base.HALDriverStation.HAL_ObserveUserProgramAutonomousDelegate"></member>
    <member name="T:HAL.Base.HALDriverStation.HAL_ObserveUserProgramDisabledDelegate"></member>
    <member name="T:HAL.Base.HALDriverStation.HAL_ObserveUserProgramStartingDelegate"></member>
    <member name="T:HAL.Base.HALDriverStation.HAL_ObserveUserProgramTeleopDelegate"></member>
    <member name="T:HAL.Base.HALDriverStation.HAL_ObserveUserProgramTestDelegate"></member>
    <member name="T:HAL.Base.HALDriverStation.HAL_SetJoystickOutputsDelegate"></member>
    <member name="T:HAL.Base.HALDriverStation.HAL_WaitForDSDataDelegate"></member>
    <member name="T:HAL.Base.HALEncoder"></member>
    <member name="M:HAL.Base.HALEncoder.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALEncoder</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALEncoder.HAL_FreeEncoder"></member>
    <member name="F:HAL.Base.HALEncoder.HAL_GetEncoder"></member>
    <member name="F:HAL.Base.HALEncoder.HAL_GetEncoderDecodingScaleFactor"></member>
    <member name="F:HAL.Base.HALEncoder.HAL_GetEncoderDirection"></member>
    <member name="F:HAL.Base.HALEncoder.HAL_GetEncoderDistance"></member>
    <member name="F:HAL.Base.HALEncoder.HAL_GetEncoderDistancePerPulse"></member>
    <member name="F:HAL.Base.HALEncoder.HAL_GetEncoderEncodingScale"></member>
    <member name="F:HAL.Base.HALEncoder.HAL_GetEncoderEncodingType"></member>
    <member name="F:HAL.Base.HALEncoder.HAL_GetEncoderFPGAIndex"></member>
    <member name="F:HAL.Base.HALEncoder.HAL_GetEncoderPeriod"></member>
    <member name="F:HAL.Base.HALEncoder.HAL_GetEncoderRate"></member>
    <member name="F:HAL.Base.HALEncoder.HAL_GetEncoderRaw"></member>
    <member name="F:HAL.Base.HALEncoder.HAL_GetEncoderSamplesToAverage"></member>
    <member name="F:HAL.Base.HALEncoder.HAL_GetEncoderStopped"></member>
    <member name="F:HAL.Base.HALEncoder.HAL_InitializeEncoder"></member>
    <member name="F:HAL.Base.HALEncoder.HAL_ResetEncoder"></member>
    <member name="F:HAL.Base.HALEncoder.HAL_SetEncoderDistancePerPulse"></member>
    <member name="F:HAL.Base.HALEncoder.HAL_SetEncoderIndexSource"></member>
    <member name="F:HAL.Base.HALEncoder.HAL_SetEncoderMaxPeriod"></member>
    <member name="F:HAL.Base.HALEncoder.HAL_SetEncoderMinRate"></member>
    <member name="F:HAL.Base.HALEncoder.HAL_SetEncoderReverseDirection"></member>
    <member name="F:HAL.Base.HALEncoder.HAL_SetEncoderSamplesToAverage"></member>
    <member name="M:HAL.Base.HALEncoder.Ping">
      <summary>
            Use this to force load the definitions in the file
            </summary>
    </member>
    <member name="T:HAL.Base.HALEncoder.HAL_FreeEncoderDelegate"></member>
    <member name="T:HAL.Base.HALEncoder.HAL_GetEncoderDecodingScaleFactorDelegate"></member>
    <member name="T:HAL.Base.HALEncoder.HAL_GetEncoderDelegate"></member>
    <member name="T:HAL.Base.HALEncoder.HAL_GetEncoderDirectionDelegate"></member>
    <member name="T:HAL.Base.HALEncoder.HAL_GetEncoderDistanceDelegate"></member>
    <member name="T:HAL.Base.HALEncoder.HAL_GetEncoderDistancePerPulseDelegate"></member>
    <member name="T:HAL.Base.HALEncoder.HAL_GetEncoderEncodingScaleDelegate"></member>
    <member name="T:HAL.Base.HALEncoder.HAL_GetEncoderEncodingTypeDelegate"></member>
    <member name="T:HAL.Base.HALEncoder.HAL_GetEncoderFPGAIndexDelegate"></member>
    <member name="T:HAL.Base.HALEncoder.HAL_GetEncoderPeriodDelegate"></member>
    <member name="T:HAL.Base.HALEncoder.HAL_GetEncoderRateDelegate"></member>
    <member name="T:HAL.Base.HALEncoder.HAL_GetEncoderRawDelegate"></member>
    <member name="T:HAL.Base.HALEncoder.HAL_GetEncoderSamplesToAverageDelegate"></member>
    <member name="T:HAL.Base.HALEncoder.HAL_GetEncoderStoppedDelegate"></member>
    <member name="T:HAL.Base.HALEncoder.HAL_InitializeEncoderDelegate"></member>
    <member name="T:HAL.Base.HALEncoder.HAL_ResetEncoderDelegate"></member>
    <member name="T:HAL.Base.HALEncoder.HAL_SetEncoderDistancePerPulseDelegate"></member>
    <member name="T:HAL.Base.HALEncoder.HAL_SetEncoderIndexSourceDelegate"></member>
    <member name="T:HAL.Base.HALEncoder.HAL_SetEncoderMaxPeriodDelegate"></member>
    <member name="T:HAL.Base.HALEncoder.HAL_SetEncoderMinRateDelegate"></member>
    <member name="T:HAL.Base.HALEncoder.HAL_SetEncoderReverseDirectionDelegate"></member>
    <member name="T:HAL.Base.HALEncoder.HAL_SetEncoderSamplesToAverageDelegate"></member>
    <member name="T:HAL.Base.HALEncoderEncodingType"></member>
    <member name="T:HAL.Base.HALEncoderIndexingType"></member>
    <member name="T:HAL.Base.HALErrors"></member>
    <member name="M:HAL.Base.HALErrors.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALErrors</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALErrors.ANALOG_TRIGGER_LIMIT_ORDER_ERROR"></member>
    <member name="F:HAL.Base.HALErrors.ANALOG_TRIGGER_LIMIT_ORDER_ERROR_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.ANALOG_TRIGGER_PULSE_OUTPUT_ERROR"></member>
    <member name="F:HAL.Base.HALErrors.ANALOG_TRIGGER_PULSE_OUTPUT_ERROR_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.CTR_InvalidParamValue_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.CTR_RxTimeout_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.CTR_SigNotUpdated_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.CTR_TxFailed_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.CTR_TxTimeout_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.CTR_UnexpectedArbId_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.ERR_CANSessionMux_InvalidBuffer_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.ERR_CANSessionMux_MessageNotFound_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.ERR_CANSessionMux_NotAllowed_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.ERR_CANSessionMux_NotInitialized_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.HAL_COUNTER_NOT_SUPPORTED"></member>
    <member name="F:HAL.Base.HALErrors.HAL_COUNTER_NOT_SUPPORTED_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.HAL_HANDLE_ERROR"></member>
    <member name="F:HAL.Base.HALErrors.HAL_HANDLE_ERROR_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.HAL_INVALID_ACCUMULATOR_CHANNEL"></member>
    <member name="F:HAL.Base.HALErrors.HAL_INVALID_ACCUMULATOR_CHANNEL_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.HAL_PWM_SCALE_ERROR"></member>
    <member name="F:HAL.Base.HALErrors.HAL_PWM_SCALE_ERROR_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.INCOMPATIBLE_STATE"></member>
    <member name="F:HAL.Base.HALErrors.INCOMPATIBLE_STATE_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.LOOP_TIMING_ERROR"></member>
    <member name="F:HAL.Base.HALErrors.LOOP_TIMING_ERROR_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.NiFpga_Status_FifoTimeout_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.NiFpga_Status_HardwareFault_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.NiFpga_Status_InvalidParameter_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.NiFpga_Status_IrqTimeout_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.NiFpga_Status_MemoryFull_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.NiFpga_Status_ResourceNotFound_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.NiFpga_Status_ResourceNotInitialized_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.NiFpga_Status_SoftwareFault_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.NiFpga_Status_TransferAborted_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.NO_AVAILABLE_RESOURCES"></member>
    <member name="F:HAL.Base.HALErrors.NO_AVAILABLE_RESOURCES_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.NULL_PARAMETER"></member>
    <member name="F:HAL.Base.HALErrors.NULL_PARAMETER_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.PARAMETER_OUT_OF_RANGE"></member>
    <member name="F:HAL.Base.HALErrors.PARAMETER_OUT_OF_RANGE_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.RESOURCE_IS_ALLOCATED"></member>
    <member name="F:HAL.Base.HALErrors.RESOURCE_IS_ALLOCATED_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.RESOURCE_OUT_OF_RANGE"></member>
    <member name="F:HAL.Base.HALErrors.RESOURCE_OUT_OF_RANGE_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.SAMPLE_RATE_TOO_HIGH"></member>
    <member name="F:HAL.Base.HALErrors.SAMPLE_RATE_TOO_HIGH_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.SPI_READ_NO_DATA"></member>
    <member name="F:HAL.Base.HALErrors.SPI_READ_NO_DATA_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.SPI_READ_NO_MISO"></member>
    <member name="F:HAL.Base.HALErrors.SPI_READ_NO_MISO_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.SPI_WRITE_NO_MOSI"></member>
    <member name="F:HAL.Base.HALErrors.SPI_WRITE_NO_MOSI_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.VI_ERROR_ASRL_FRAMING_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.VI_ERROR_ASRL_OVERRUN_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.VI_ERROR_ASRL_PARITY_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.VI_ERROR_INV_OBJECT_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.VI_ERROR_INV_PARAMETER_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.VI_ERROR_INV_RSRC_NAME_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.VI_ERROR_IO_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.VI_ERROR_QUEUE_OVERFLOW_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.VI_ERROR_RSRC_BUSY_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.VI_ERROR_RSRC_LOCKED_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.VI_ERROR_RSRC_NFOUND_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.VI_ERROR_SYSTEM_ERROR_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.VOLTAGE_OUT_OF_RANGE"></member>
    <member name="F:HAL.Base.HALErrors.VOLTAGE_OUT_OF_RANGE_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.WARN_CANSessionMux_NoToken_MESSAGE"></member>
    <member name="T:HAL.Base.HALI2C"></member>
    <member name="M:HAL.Base.HALI2C.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALI2C</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALI2C.HAL_CloseI2C"></member>
    <member name="F:HAL.Base.HALI2C.HAL_InitializeI2C"></member>
    <member name="F:HAL.Base.HALI2C.HAL_ReadI2C"></member>
    <member name="F:HAL.Base.HALI2C.HAL_TransactionI2C"></member>
    <member name="F:HAL.Base.HALI2C.HAL_WriteI2C"></member>
    <member name="M:HAL.Base.HALI2C.Ping">
      <summary>
            Use this to force load the definitions in the file
            </summary>
    </member>
    <member name="T:HAL.Base.HALI2C.HAL_CloseI2CDelegate"></member>
    <member name="T:HAL.Base.HALI2C.HAL_InitializeI2CDelegate"></member>
    <member name="T:HAL.Base.HALI2C.HAL_ReadI2CDelegate"></member>
    <member name="T:HAL.Base.HALI2C.HAL_TransactionI2CDelegate"></member>
    <member name="T:HAL.Base.HALI2C.HAL_WriteI2CDelegate"></member>
    <member name="T:HAL.Base.HALInterrupts"></member>
    <member name="M:HAL.Base.HALInterrupts.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALInterrupts</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALInterrupts.HAL_AttachInterruptHandler"></member>
    <member name="F:HAL.Base.HALInterrupts.HAL_CleanInterrupts"></member>
    <member name="F:HAL.Base.HALInterrupts.HAL_DisableInterrupts"></member>
    <member name="F:HAL.Base.HALInterrupts.HAL_EnableInterrupts"></member>
    <member name="F:HAL.Base.HALInterrupts.HAL_InitializeInterrupts"></member>
    <member name="F:HAL.Base.HALInterrupts.HAL_ReadInterruptFallingTimestamp"></member>
    <member name="F:HAL.Base.HALInterrupts.HAL_ReadInterruptRisingTimestamp"></member>
    <member name="F:HAL.Base.HALInterrupts.HAL_RequestInterrupts"></member>
    <member name="F:HAL.Base.HALInterrupts.HAL_SetInterruptUpSourceEdge"></member>
    <member name="F:HAL.Base.HALInterrupts.HAL_WaitForInterrupt"></member>
    <member name="M:HAL.Base.HALInterrupts.Ping">
      <summary>
            Use this to force load the definitions in the file
            </summary>
    </member>
    <member name="T:HAL.Base.HALInterrupts.HAL_AttachInterruptHandlerDelegate"></member>
    <member name="T:HAL.Base.HALInterrupts.HAL_CleanInterruptsDelegate"></member>
    <member name="T:HAL.Base.HALInterrupts.HAL_DisableInterruptsDelegate"></member>
    <member name="T:HAL.Base.HALInterrupts.HAL_EnableInterruptsDelegate"></member>
    <member name="T:HAL.Base.HALInterrupts.HAL_InitializeInterruptsDelegate"></member>
    <member name="T:HAL.Base.HALInterrupts.HAL_InterruptHandlerFunction"></member>
    <member name="T:HAL.Base.HALInterrupts.HAL_ReadInterruptFallingTimestampDelegate"></member>
    <member name="T:HAL.Base.HALInterrupts.HAL_ReadInterruptRisingTimestampDelegate"></member>
    <member name="T:HAL.Base.HALInterrupts.HAL_RequestInterruptsDelegate"></member>
    <member name="T:HAL.Base.HALInterrupts.HAL_SetInterruptUpSourceEdgeDelegate"></member>
    <member name="T:HAL.Base.HALInterrupts.HAL_WaitForInterruptDelegate"></member>
    <member name="T:HAL.Base.HALJoystickAxes">
      <summary>
            Joystick Axes Struct
            </summary>
    </member>
    <member name="F:HAL.Base.HALJoystickAxes.axes"></member>
    <member name="F:HAL.Base.HALJoystickAxes.count"></member>
    <member name="T:HAL.Base.HALJoystickAxesArray"></member>
    <member name="F:HAL.Base.HALJoystickAxesArray.axes0"></member>
    <member name="F:HAL.Base.HALJoystickAxesArray.axes1"></member>
    <member name="F:HAL.Base.HALJoystickAxesArray.axes10"></member>
    <member name="F:HAL.Base.HALJoystickAxesArray.axes11"></member>
    <member name="F:HAL.Base.HALJoystickAxesArray.axes2"></member>
    <member name="F:HAL.Base.HALJoystickAxesArray.axes3"></member>
    <member name="F:HAL.Base.HALJoystickAxesArray.axes4"></member>
    <member name="F:HAL.Base.HALJoystickAxesArray.axes5"></member>
    <member name="F:HAL.Base.HALJoystickAxesArray.axes6"></member>
    <member name="F:HAL.Base.HALJoystickAxesArray.axes7"></member>
    <member name="F:HAL.Base.HALJoystickAxesArray.axes8"></member>
    <member name="F:HAL.Base.HALJoystickAxesArray.axes9"></member>
    <member name="P:HAL.Base.HALJoystickAxesArray.Item(System.Int32)"></member>
    <member name="T:HAL.Base.HALJoystickAxesTypesArray"></member>
    <member name="F:HAL.Base.HALJoystickAxesTypesArray.axes0"></member>
    <member name="F:HAL.Base.HALJoystickAxesTypesArray.axes1"></member>
    <member name="F:HAL.Base.HALJoystickAxesTypesArray.axes10"></member>
    <member name="F:HAL.Base.HALJoystickAxesTypesArray.axes11"></member>
    <member name="F:HAL.Base.HALJoystickAxesTypesArray.axes2"></member>
    <member name="F:HAL.Base.HALJoystickAxesTypesArray.axes3"></member>
    <member name="F:HAL.Base.HALJoystickAxesTypesArray.axes4"></member>
    <member name="F:HAL.Base.HALJoystickAxesTypesArray.axes5"></member>
    <member name="F:HAL.Base.HALJoystickAxesTypesArray.axes6"></member>
    <member name="F:HAL.Base.HALJoystickAxesTypesArray.axes7"></member>
    <member name="F:HAL.Base.HALJoystickAxesTypesArray.axes8"></member>
    <member name="F:HAL.Base.HALJoystickAxesTypesArray.axes9"></member>
    <member name="P:HAL.Base.HALJoystickAxesTypesArray.Item(System.Int32)"></member>
    <member name="T:HAL.Base.HALJoystickButtons"></member>
    <member name="F:HAL.Base.HALJoystickButtons.buttons"></member>
    <member name="F:HAL.Base.HALJoystickButtons.count"></member>
    <member name="T:HAL.Base.HALJoystickDescriptor"></member>
    <member name="F:HAL.Base.HALJoystickDescriptor.axisCount"></member>
    <member name="F:HAL.Base.HALJoystickDescriptor.axisTypes"></member>
    <member name="F:HAL.Base.HALJoystickDescriptor.buttonCount"></member>
    <member name="F:HAL.Base.HALJoystickDescriptor.isXbox"></member>
    <member name="F:HAL.Base.HALJoystickDescriptor.name"></member>
    <member name="F:HAL.Base.HALJoystickDescriptor.povCount"></member>
    <member name="F:HAL.Base.HALJoystickDescriptor.type"></member>
    <member name="T:HAL.Base.HALJoystickNameArray"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte0"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte1"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte10"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte100"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte101"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte102"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte103"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte104"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte105"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte106"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte107"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte108"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte109"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte11"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte110"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte111"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte112"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte113"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte114"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte115"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte116"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte117"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte118"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte119"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte12"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte120"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte121"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte122"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte123"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte124"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte125"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte126"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte127"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte128"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte129"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte13"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte130"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte131"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte132"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte133"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte134"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte135"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte136"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte137"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte138"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte139"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte14"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte140"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte141"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte142"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte143"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte144"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte145"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte146"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte147"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte148"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte149"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte15"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte150"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte151"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte152"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte153"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte154"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte155"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte156"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte157"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte158"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte159"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte16"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte160"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte161"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte162"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte163"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte164"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte165"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte166"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte167"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte168"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte169"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte17"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte170"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte171"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte172"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte173"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte174"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte175"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte176"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte177"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte178"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte179"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte18"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte180"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte181"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte182"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte183"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte184"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte185"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte186"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte187"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte188"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte189"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte19"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte190"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte191"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte192"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte193"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte194"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte195"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte196"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte197"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte198"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte199"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte2"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte20"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte200"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte201"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte202"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte203"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte204"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte205"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte206"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte207"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte208"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte209"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte21"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte210"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte211"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte212"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte213"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte214"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte215"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte216"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte217"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte218"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte219"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte22"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte220"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte221"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte222"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte223"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte224"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte225"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte226"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte227"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte228"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte229"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte23"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte230"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte231"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte232"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte233"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte234"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte235"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte236"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte237"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte238"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte239"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte24"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte240"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte241"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte242"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte243"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte244"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte245"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte246"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte247"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte248"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte249"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte25"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte250"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte251"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte252"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte253"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte254"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte255"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte26"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte27"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte28"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte29"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte3"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte30"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte31"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte32"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte33"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte34"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte35"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte36"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte37"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte38"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte39"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte4"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte40"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte41"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte42"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte43"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte44"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte45"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte46"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte47"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte48"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte49"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte5"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte50"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte51"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte52"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte53"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte54"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte55"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte56"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte57"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte58"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte59"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte6"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte60"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte61"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte62"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte63"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte64"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte65"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte66"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte67"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte68"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte69"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte7"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte70"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte71"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte72"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte73"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte74"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte75"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte76"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte77"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte78"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte79"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte8"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte80"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte81"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte82"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte83"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte84"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte85"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte86"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte87"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte88"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte89"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte9"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte90"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte91"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte92"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte93"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte94"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte95"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte96"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte97"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte98"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte99"></member>
    <member name="P:HAL.Base.HALJoystickNameArray.Item(System.Int32)"></member>
    <member name="M:HAL.Base.HALJoystickNameArray.ToString"></member>
    <member name="T:HAL.Base.HALJoystickPOVArray"></member>
    <member name="P:HAL.Base.HALJoystickPOVArray.Item(System.Int32)"></member>
    <member name="T:HAL.Base.HALJoystickPOVs"></member>
    <member name="F:HAL.Base.HALJoystickPOVs.count"></member>
    <member name="F:HAL.Base.HALJoystickPOVs.povs"></member>
    <member name="T:HAL.Base.HALNotifier"></member>
    <member name="M:HAL.Base.HALNotifier.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALNotifier</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALNotifier.HAL_CleanNotifier"></member>
    <member name="F:HAL.Base.HALNotifier.HAL_GetNotifierParam"></member>
    <member name="F:HAL.Base.HALNotifier.HAL_InitializeNotifier"></member>
    <member name="F:HAL.Base.HALNotifier.HAL_StopNotifierAlarm"></member>
    <member name="F:HAL.Base.HALNotifier.HAL_UpdateNotifierAlarm"></member>
    <member name="M:HAL.Base.HALNotifier.Ping">
      <summary>
            Use this to force load the definitions in the file
            </summary>
    </member>
    <member name="T:HAL.Base.HALNotifier.HAL_CleanNotifierDelegate"></member>
    <member name="T:HAL.Base.HALNotifier.HAL_GetNotifierParamDelegate"></member>
    <member name="T:HAL.Base.HALNotifier.HAL_InitializeNotifierDelegate"></member>
    <member name="T:HAL.Base.HALNotifier.HAL_NotifierProcess"></member>
    <member name="T:HAL.Base.HALNotifier.HAL_StopNotifierAlarmDelegate"></member>
    <member name="T:HAL.Base.HALNotifier.HAL_UpdateNotifierAlarmDelegate"></member>
    <member name="T:HAL.Base.HALPDP"></member>
    <member name="M:HAL.Base.HALPDP.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALPDP</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALPDP.HAL_CheckPDPChannel"></member>
    <member name="F:HAL.Base.HALPDP.HAL_CheckPDPModule"></member>
    <member name="F:HAL.Base.HALPDP.HAL_ClearPDPStickyFaults"></member>
    <member name="F:HAL.Base.HALPDP.HAL_GetPDPChannelCurrent"></member>
    <member name="F:HAL.Base.HALPDP.HAL_GetPDPTemperature"></member>
    <member name="F:HAL.Base.HALPDP.HAL_GetPDPTotalCurrent"></member>
    <member name="F:HAL.Base.HALPDP.HAL_GetPDPTotalEnergy"></member>
    <member name="F:HAL.Base.HALPDP.HAL_GetPDPTotalPower"></member>
    <member name="F:HAL.Base.HALPDP.HAL_GetPDPVoltage"></member>
    <member name="F:HAL.Base.HALPDP.HAL_InitializePDP"></member>
    <member name="F:HAL.Base.HALPDP.HAL_ResetPDPTotalEnergy"></member>
    <member name="M:HAL.Base.HALPDP.Ping">
      <summary>
            Use this to force load the definitions in the file
            </summary>
    </member>
    <member name="T:HAL.Base.HALPDP.HAL_CheckPDPChannelDelegate"></member>
    <member name="T:HAL.Base.HALPDP.HAL_CheckPDPModuleDelegate"></member>
    <member name="T:HAL.Base.HALPDP.HAL_ClearPDPStickyFaultsDelegate"></member>
    <member name="T:HAL.Base.HALPDP.HAL_GetPDPChannelCurrentDelegate"></member>
    <member name="T:HAL.Base.HALPDP.HAL_GetPDPTemperatureDelegate"></member>
    <member name="T:HAL.Base.HALPDP.HAL_GetPDPTotalCurrentDelegate"></member>
    <member name="T:HAL.Base.HALPDP.HAL_GetPDPTotalEnergyDelegate"></member>
    <member name="T:HAL.Base.HALPDP.HAL_GetPDPTotalPowerDelegate"></member>
    <member name="T:HAL.Base.HALPDP.HAL_GetPDPVoltageDelegate"></member>
    <member name="T:HAL.Base.HALPDP.HAL_InitializePDPDelegate"></member>
    <member name="T:HAL.Base.HALPDP.HAL_ResetPDPTotalEnergyDelegate"></member>
    <member name="T:HAL.Base.HALPorts"></member>
    <member name="M:HAL.Base.HALPorts.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALPorts</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALPorts.HAL_GetNumAccumulators"></member>
    <member name="F:HAL.Base.HALPorts.HAL_GetNumAnalogInputs"></member>
    <member name="F:HAL.Base.HALPorts.HAL_GetNumAnalogOutputs"></member>
    <member name="F:HAL.Base.HALPorts.HAL_GetNumAnalogTriggers"></member>
    <member name="F:HAL.Base.HALPorts.HAL_GetNumCounters"></member>
    <member name="F:HAL.Base.HALPorts.HAL_GetNumDigitalChannels"></member>
    <member name="F:HAL.Base.HALPorts.HAL_GetNumDigitalHeaders"></member>
    <member name="F:HAL.Base.HALPorts.HAL_GetNumDigitalPWMOutputs"></member>
    <member name="F:HAL.Base.HALPorts.HAL_GetNumEncoders"></member>
    <member name="F:HAL.Base.HALPorts.HAL_GetNumInterrupts"></member>
    <member name="F:HAL.Base.HALPorts.HAL_GetNumPCMModules"></member>
    <member name="F:HAL.Base.HALPorts.HAL_GetNumPDPChannels"></member>
    <member name="F:HAL.Base.HALPorts.HAL_GetNumPDPModules"></member>
    <member name="F:HAL.Base.HALPorts.HAL_GetNumPWMChannels"></member>
    <member name="F:HAL.Base.HALPorts.HAL_GetNumPWMHeaders"></member>
    <member name="F:HAL.Base.HALPorts.HAL_GetNumRelayChannels"></member>
    <member name="F:HAL.Base.HALPorts.HAL_GetNumRelayHeaders"></member>
    <member name="F:HAL.Base.HALPorts.HAL_GetNumSolenoidChannels"></member>
    <member name="M:HAL.Base.HALPorts.Ping">
      <summary>
            Use this to force load the definitions in the file
            </summary>
    </member>
    <member name="T:HAL.Base.HALPorts.HAL_GetNumAccumulatorsDelegate"></member>
    <member name="T:HAL.Base.HALPorts.HAL_GetNumAnalogInputsDelegate"></member>
    <member name="T:HAL.Base.HALPorts.HAL_GetNumAnalogOutputsDelegate"></member>
    <member name="T:HAL.Base.HALPorts.HAL_GetNumAnalogTriggersDelegate"></member>
    <member name="T:HAL.Base.HALPorts.HAL_GetNumCountersDelegate"></member>
    <member name="T:HAL.Base.HALPorts.HAL_GetNumDigitalChannelsDelegate"></member>
    <member name="T:HAL.Base.HALPorts.HAL_GetNumDigitalHeadersDelegate"></member>
    <member name="T:HAL.Base.HALPorts.HAL_GetNumDigitalPWMOutputsDelegate"></member>
    <member name="T:HAL.Base.HALPorts.HAL_GetNumEncodersDelegate"></member>
    <member name="T:HAL.Base.HALPorts.HAL_GetNumInterruptsDelegate"></member>
    <member name="T:HAL.Base.HALPorts.HAL_GetNumPCMModulesDelegate"></member>
    <member name="T:HAL.Base.HALPorts.HAL_GetNumPDPChannelsDelegate"></member>
    <member name="T:HAL.Base.HALPorts.HAL_GetNumPDPModulesDelegate"></member>
    <member name="T:HAL.Base.HALPorts.HAL_GetNumPWMChannelsDelegate"></member>
    <member name="T:HAL.Base.HALPorts.HAL_GetNumPWMHeadersDelegate"></member>
    <member name="T:HAL.Base.HALPorts.HAL_GetNumRelayChannelsDelegate"></member>
    <member name="T:HAL.Base.HALPorts.HAL_GetNumRelayHeadersDelegate"></member>
    <member name="T:HAL.Base.HALPorts.HAL_GetNumSolenoidChannelsDelegate"></member>
    <member name="T:HAL.Base.HALPower"></member>
    <member name="M:HAL.Base.HALPower.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALPower</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALPower.HAL_GetUserActive3V3"></member>
    <member name="F:HAL.Base.HALPower.HAL_GetUserActive5V"></member>
    <member name="F:HAL.Base.HALPower.HAL_GetUserActive6V"></member>
    <member name="F:HAL.Base.HALPower.HAL_GetUserCurrent3V3"></member>
    <member name="F:HAL.Base.HALPower.HAL_GetUserCurrent5V"></member>
    <member name="F:HAL.Base.HALPower.HAL_GetUserCurrent6V"></member>
    <member name="F:HAL.Base.HALPower.HAL_GetUserCurrentFaults3V3"></member>
    <member name="F:HAL.Base.HALPower.HAL_GetUserCurrentFaults5V"></member>
    <member name="F:HAL.Base.HALPower.HAL_GetUserCurrentFaults6V"></member>
    <member name="F:HAL.Base.HALPower.HAL_GetUserVoltage3V3"></member>
    <member name="F:HAL.Base.HALPower.HAL_GetUserVoltage5V"></member>
    <member name="F:HAL.Base.HALPower.HAL_GetUserVoltage6V"></member>
    <member name="F:HAL.Base.HALPower.HAL_GetVinCurrent"></member>
    <member name="F:HAL.Base.HALPower.HAL_GetVinVoltage"></member>
    <member name="M:HAL.Base.HALPower.Ping">
      <summary>
            Use this to force load the definitions in the file
            </summary>
    </member>
    <member name="T:HAL.Base.HALPower.HAL_GetUserActive3V3Delegate"></member>
    <member name="T:HAL.Base.HALPower.HAL_GetUserActive5VDelegate"></member>
    <member name="T:HAL.Base.HALPower.HAL_GetUserActive6VDelegate"></member>
    <member name="T:HAL.Base.HALPower.HAL_GetUserCurrent3V3Delegate"></member>
    <member name="T:HAL.Base.HALPower.HAL_GetUserCurrent5VDelegate"></member>
    <member name="T:HAL.Base.HALPower.HAL_GetUserCurrent6VDelegate"></member>
    <member name="T:HAL.Base.HALPower.HAL_GetUserCurrentFaults3V3Delegate"></member>
    <member name="T:HAL.Base.HALPower.HAL_GetUserCurrentFaults5VDelegate"></member>
    <member name="T:HAL.Base.HALPower.HAL_GetUserCurrentFaults6VDelegate"></member>
    <member name="T:HAL.Base.HALPower.HAL_GetUserVoltage3V3Delegate"></member>
    <member name="T:HAL.Base.HALPower.HAL_GetUserVoltage5VDelegate"></member>
    <member name="T:HAL.Base.HALPower.HAL_GetUserVoltage6VDelegate"></member>
    <member name="T:HAL.Base.HALPower.HAL_GetVinCurrentDelegate"></member>
    <member name="T:HAL.Base.HALPower.HAL_GetVinVoltageDelegate"></member>
    <member name="T:HAL.Base.HALPWM"></member>
    <member name="M:HAL.Base.HALPWM.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALPWM</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALPWM.HAL_CheckPWMChannel"></member>
    <member name="F:HAL.Base.HALPWM.HAL_FreePWMPort"></member>
    <member name="F:HAL.Base.HALPWM.HAL_GetLoopTiming"></member>
    <member name="F:HAL.Base.HALPWM.HAL_GetPWMConfigRaw"></member>
    <member name="F:HAL.Base.HALPWM.HAL_GetPWMEliminateDeadband"></member>
    <member name="F:HAL.Base.HALPWM.HAL_GetPWMPosition"></member>
    <member name="F:HAL.Base.HALPWM.HAL_GetPWMRaw"></member>
    <member name="F:HAL.Base.HALPWM.HAL_GetPWMSpeed"></member>
    <member name="F:HAL.Base.HALPWM.HAL_InitializePWMPort"></member>
    <member name="F:HAL.Base.HALPWM.HAL_LatchPWMZero"></member>
    <member name="F:HAL.Base.HALPWM.HAL_SetPWMConfig"></member>
    <member name="F:HAL.Base.HALPWM.HAL_SetPWMConfigRaw"></member>
    <member name="F:HAL.Base.HALPWM.HAL_SetPWMDisabled"></member>
    <member name="F:HAL.Base.HALPWM.HAL_SetPWMEliminateDeadband"></member>
    <member name="F:HAL.Base.HALPWM.HAL_SetPWMPeriodScale"></member>
    <member name="F:HAL.Base.HALPWM.HAL_SetPWMPosition"></member>
    <member name="F:HAL.Base.HALPWM.HAL_SetPWMRaw"></member>
    <member name="F:HAL.Base.HALPWM.HAL_SetPWMSpeed"></member>
    <member name="M:HAL.Base.HALPWM.Ping">
      <summary>
            Use this to force load the definitions in the file
            </summary>
    </member>
    <member name="T:HAL.Base.HALPWM.HAL_CheckPWMChannelDelegate"></member>
    <member name="T:HAL.Base.HALPWM.HAL_FreePWMPortDelegate"></member>
    <member name="T:HAL.Base.HALPWM.HAL_GetLoopTimingDelegate"></member>
    <member name="T:HAL.Base.HALPWM.HAL_GetPWMConfigRawDelegate"></member>
    <member name="T:HAL.Base.HALPWM.HAL_GetPWMEliminateDeadbandDelegate"></member>
    <member name="T:HAL.Base.HALPWM.HAL_GetPWMPositionDelegate"></member>
    <member name="T:HAL.Base.HALPWM.HAL_GetPWMRawDelegate"></member>
    <member name="T:HAL.Base.HALPWM.HAL_GetPWMSpeedDelegate"></member>
    <member name="T:HAL.Base.HALPWM.HAL_InitializePWMPortDelegate"></member>
    <member name="T:HAL.Base.HALPWM.HAL_LatchPWMZeroDelegate"></member>
    <member name="T:HAL.Base.HALPWM.HAL_SetPWMConfigDelegate"></member>
    <member name="T:HAL.Base.HALPWM.HAL_SetPWMConfigRawDelegate"></member>
    <member name="T:HAL.Base.HALPWM.HAL_SetPWMDisabledDelegate"></member>
    <member name="T:HAL.Base.HALPWM.HAL_SetPWMEliminateDeadbandDelegate"></member>
    <member name="T:HAL.Base.HALPWM.HAL_SetPWMPeriodScaleDelegate"></member>
    <member name="T:HAL.Base.HALPWM.HAL_SetPWMPositionDelegate"></member>
    <member name="T:HAL.Base.HALPWM.HAL_SetPWMRawDelegate"></member>
    <member name="T:HAL.Base.HALPWM.HAL_SetPWMSpeedDelegate"></member>
    <member name="T:HAL.Base.HALRelay"></member>
    <member name="M:HAL.Base.HALRelay.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALRelay</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALRelay.HAL_CheckRelayChannel"></member>
    <member name="F:HAL.Base.HALRelay.HAL_FreeRelayPort"></member>
    <member name="F:HAL.Base.HALRelay.HAL_GetRelay"></member>
    <member name="F:HAL.Base.HALRelay.HAL_InitializeRelayPort"></member>
    <member name="F:HAL.Base.HALRelay.HAL_SetRelay"></member>
    <member name="M:HAL.Base.HALRelay.Ping">
      <summary>
            Use this to force load the definitions in the file
            </summary>
    </member>
    <member name="T:HAL.Base.HALRelay.HAL_CheckRelayChannelDelegate"></member>
    <member name="T:HAL.Base.HALRelay.HAL_FreeRelayPortDelegate"></member>
    <member name="T:HAL.Base.HALRelay.HAL_GetRelayDelegate"></member>
    <member name="T:HAL.Base.HALRelay.HAL_InitializeRelayPortDelegate"></member>
    <member name="T:HAL.Base.HALRelay.HAL_SetRelayDelegate"></member>
    <member name="T:HAL.Base.HALRuntimeType">
      <summary></summary>
    </member>
    <member name="F:HAL.Base.HALRuntimeType.HALAthena">
      <summary></summary>
    </member>
    <member name="F:HAL.Base.HALRuntimeType.HALMock">
      <summary></summary>
    </member>
    <member name="T:HAL.Base.HALSerialPort"></member>
    <member name="M:HAL.Base.HALSerialPort.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALSerialPort</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALSerialPort.HAL_ClearSerial"></member>
    <member name="F:HAL.Base.HALSerialPort.HAL_CloseSerial"></member>
    <member name="F:HAL.Base.HALSerialPort.HAL_DisableSerialTermination"></member>
    <member name="F:HAL.Base.HALSerialPort.HAL_EnableSerialTermination"></member>
    <member name="F:HAL.Base.HALSerialPort.HAL_FlushSerial"></member>
    <member name="F:HAL.Base.HALSerialPort.HAL_GetSerialBytesReceived"></member>
    <member name="F:HAL.Base.HALSerialPort.HAL_InitializeSerialPort"></member>
    <member name="F:HAL.Base.HALSerialPort.HAL_ReadSerial"></member>
    <member name="F:HAL.Base.HALSerialPort.HAL_SetSerialBaudRate"></member>
    <member name="F:HAL.Base.HALSerialPort.HAL_SetSerialDataBits"></member>
    <member name="F:HAL.Base.HALSerialPort.HAL_SetSerialFlowControl"></member>
    <member name="F:HAL.Base.HALSerialPort.HAL_SetSerialParity"></member>
    <member name="F:HAL.Base.HALSerialPort.HAL_SetSerialReadBufferSize"></member>
    <member name="F:HAL.Base.HALSerialPort.HAL_SetSerialStopBits"></member>
    <member name="F:HAL.Base.HALSerialPort.HAL_SetSerialTimeout"></member>
    <member name="F:HAL.Base.HALSerialPort.HAL_SetSerialWriteBufferSize"></member>
    <member name="F:HAL.Base.HALSerialPort.HAL_SetSerialWriteMode"></member>
    <member name="F:HAL.Base.HALSerialPort.HAL_WriteSerial"></member>
    <member name="M:HAL.Base.HALSerialPort.Ping">
      <summary>
            Use this to force load the definitions in the file
            </summary>
    </member>
    <member name="T:HAL.Base.HALSerialPort.HAL_ClearSerialDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.HAL_CloseSerialDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.HAL_DisableSerialTerminationDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.HAL_EnableSerialTerminationDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.HAL_FlushSerialDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.HAL_GetSerialBytesReceivedDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.HAL_InitializeSerialPortDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.HAL_ReadSerialDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.HAL_SetSerialBaudRateDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.HAL_SetSerialDataBitsDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.HAL_SetSerialFlowControlDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.HAL_SetSerialParityDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.HAL_SetSerialReadBufferSizeDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.HAL_SetSerialStopBitsDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.HAL_SetSerialTimeoutDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.HAL_SetSerialWriteBufferSizeDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.HAL_SetSerialWriteModeDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.HAL_WriteSerialDelegate"></member>
    <member name="T:HAL.Base.HALSolenoid"></member>
    <member name="M:HAL.Base.HALSolenoid.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALSolenoid</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALSolenoid.HAL_CheckSolenoidChannel"></member>
    <member name="F:HAL.Base.HALSolenoid.HAL_CheckSolenoidModule"></member>
    <member name="F:HAL.Base.HALSolenoid.HAL_ClearAllPCMStickyFaults"></member>
    <member name="F:HAL.Base.HALSolenoid.HAL_FreeSolenoidPort"></member>
    <member name="F:HAL.Base.HALSolenoid.HAL_GetAllSolenoids"></member>
    <member name="F:HAL.Base.HALSolenoid.HAL_GetPCMSolenoidBlackList"></member>
    <member name="F:HAL.Base.HALSolenoid.HAL_GetPCMSolenoidVoltageFault"></member>
    <member name="F:HAL.Base.HALSolenoid.HAL_GetPCMSolenoidVoltageStickyFault"></member>
    <member name="F:HAL.Base.HALSolenoid.HAL_GetSolenoid"></member>
    <member name="F:HAL.Base.HALSolenoid.HAL_InitializeSolenoidPort"></member>
    <member name="F:HAL.Base.HALSolenoid.HAL_SetSolenoid"></member>
    <member name="M:HAL.Base.HALSolenoid.Ping">
      <summary>
            Use this to force load the definitions in the file
            </summary>
    </member>
    <member name="T:HAL.Base.HALSolenoid.HAL_CheckSolenoidChannelDelegate"></member>
    <member name="T:HAL.Base.HALSolenoid.HAL_CheckSolenoidModuleDelegate"></member>
    <member name="T:HAL.Base.HALSolenoid.HAL_ClearAllPCMStickyFaultsDelegate"></member>
    <member name="T:HAL.Base.HALSolenoid.HAL_FreeSolenoidPortDelegate"></member>
    <member name="T:HAL.Base.HALSolenoid.HAL_GetAllSolenoidsDelegate"></member>
    <member name="T:HAL.Base.HALSolenoid.HAL_GetPCMSolenoidBlackListDelegate"></member>
    <member name="T:HAL.Base.HALSolenoid.HAL_GetPCMSolenoidVoltageFaultDelegate"></member>
    <member name="T:HAL.Base.HALSolenoid.HAL_GetPCMSolenoidVoltageStickyFaultDelegate"></member>
    <member name="T:HAL.Base.HALSolenoid.HAL_GetSolenoidDelegate"></member>
    <member name="T:HAL.Base.HALSolenoid.HAL_InitializeSolenoidPortDelegate"></member>
    <member name="T:HAL.Base.HALSolenoid.HAL_SetSolenoidDelegate"></member>
    <member name="T:HAL.Base.HALSPI"></member>
    <member name="M:HAL.Base.HALSPI.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALSPI</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALSPI.HAL_CloseSPI"></member>
    <member name="F:HAL.Base.HALSPI.HAL_FreeSPIAccumulator"></member>
    <member name="F:HAL.Base.HALSPI.HAL_GetSPIAccumulatorAverage"></member>
    <member name="F:HAL.Base.HALSPI.HAL_GetSPIAccumulatorCount"></member>
    <member name="F:HAL.Base.HALSPI.HAL_GetSPIAccumulatorLastValue"></member>
    <member name="F:HAL.Base.HALSPI.HAL_GetSPIAccumulatorOutput"></member>
    <member name="F:HAL.Base.HALSPI.HAL_GetSPIAccumulatorValue"></member>
    <member name="F:HAL.Base.HALSPI.HAL_GetSPIHandle"></member>
    <member name="F:HAL.Base.HALSPI.HAL_InitializeSPI"></member>
    <member name="F:HAL.Base.HALSPI.HAL_InitSPIAccumulator"></member>
    <member name="F:HAL.Base.HALSPI.HAL_ReadSPI"></member>
    <member name="F:HAL.Base.HALSPI.HAL_ResetSPIAccumulator"></member>
    <member name="F:HAL.Base.HALSPI.HAL_SetSPIAccumulatorCenter"></member>
    <member name="F:HAL.Base.HALSPI.HAL_SetSPIAccumulatorDeadband"></member>
    <member name="F:HAL.Base.HALSPI.HAL_SetSPIChipSelectActiveHigh"></member>
    <member name="F:HAL.Base.HALSPI.HAL_SetSPIChipSelectActiveLow"></member>
    <member name="F:HAL.Base.HALSPI.HAL_SetSPIHandle"></member>
    <member name="F:HAL.Base.HALSPI.HAL_SetSPIOpts"></member>
    <member name="F:HAL.Base.HALSPI.HAL_SetSPISpeed"></member>
    <member name="F:HAL.Base.HALSPI.HAL_TransactionSPI"></member>
    <member name="F:HAL.Base.HALSPI.HAL_WriteSPI"></member>
    <member name="M:HAL.Base.HALSPI.Ping">
      <summary>
            Use this to force load the definitions in the file
            </summary>
    </member>
    <member name="T:HAL.Base.HALSPI.HAL_CloseSPIDelegate"></member>
    <member name="T:HAL.Base.HALSPI.HAL_FreeSPIAccumulatorDelegate"></member>
    <member name="T:HAL.Base.HALSPI.HAL_GetSPIAccumulatorAverageDelegate"></member>
    <member name="T:HAL.Base.HALSPI.HAL_GetSPIAccumulatorCountDelegate"></member>
    <member name="T:HAL.Base.HALSPI.HAL_GetSPIAccumulatorLastValueDelegate"></member>
    <member name="T:HAL.Base.HALSPI.HAL_GetSPIAccumulatorOutputDelegate"></member>
    <member name="T:HAL.Base.HALSPI.HAL_GetSPIAccumulatorValueDelegate"></member>
    <member name="T:HAL.Base.HALSPI.HAL_GetSPIHandleDelegate"></member>
    <member name="T:HAL.Base.HALSPI.HAL_InitializeSPIDelegate"></member>
    <member name="T:HAL.Base.HALSPI.HAL_InitSPIAccumulatorDelegate"></member>
    <member name="T:HAL.Base.HALSPI.HAL_ReadSPIDelegate"></member>
    <member name="T:HAL.Base.HALSPI.HAL_ResetSPIAccumulatorDelegate"></member>
    <member name="T:HAL.Base.HALSPI.HAL_SetSPIAccumulatorCenterDelegate"></member>
    <member name="T:HAL.Base.HALSPI.HAL_SetSPIAccumulatorDeadbandDelegate"></member>
    <member name="T:HAL.Base.HALSPI.HAL_SetSPIChipSelectActiveHighDelegate"></member>
    <member name="T:HAL.Base.HALSPI.HAL_SetSPIChipSelectActiveLowDelegate"></member>
    <member name="T:HAL.Base.HALSPI.HAL_SetSPIHandleDelegate"></member>
    <member name="T:HAL.Base.HALSPI.HAL_SetSPIOptsDelegate"></member>
    <member name="T:HAL.Base.HALSPI.HAL_SetSPISpeedDelegate"></member>
    <member name="T:HAL.Base.HALSPI.HAL_TransactionSPIDelegate"></member>
    <member name="T:HAL.Base.HALSPI.HAL_WriteSPIDelegate"></member>
    <member name="T:HAL.Base.HALThreads"></member>
    <member name="M:HAL.Base.HALThreads.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALThreads</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALThreads.HAL_GetCurrentThreadPriority"></member>
    <member name="F:HAL.Base.HALThreads.HAL_SetCurrentThreadPriority"></member>
    <member name="M:HAL.Base.HALThreads.Ping">
      <summary>
            Use this to force load the definitions in the file
            </summary>
    </member>
    <member name="T:HAL.Base.HALThreads.HAL_GetCurrentThreadPriorityDelegate"></member>
    <member name="T:HAL.Base.HALThreads.HAL_SetCurrentThreadPriorityDelegate"></member>
    <member name="T:HAL.Base.Instances"></member>
    <member name="T:HAL.Base.ResourceType"></member>
    <member name="T:HAL.Simulator.DriverStationHelper">
      <summary>
            This class is useful to emulate a driver station correctly in the simulator.
            </summary>
    </member>
    <member name="P:HAL.Simulator.DriverStationHelper.JoystickCallback">
      <summary>
            Assign to this callback to set the joysticks right before updating the robot data.
            </summary>
    </member>
    <member name="M:HAL.Simulator.DriverStationHelper.SetAllianceStation(HAL.Base.HALAllianceStationID)"></member>
    <member name="M:HAL.Simulator.DriverStationHelper.SetDSAttached(System.Boolean)"></member>
    <member name="M:HAL.Simulator.DriverStationHelper.SetEnabledState(HAL.Simulator.DriverStationHelper.EnabledState)">
      <summary>
            Sets the robot enabled state
            </summary>
      <param name="state">The state to set</param>
    </member>
    <member name="M:HAL.Simulator.DriverStationHelper.SetFMSAttached(System.Boolean)"></member>
    <member name="M:HAL.Simulator.DriverStationHelper.SetJoystickAxesCount(System.Int32,System.Int32)">
      <summary>
            Sets the number of axes on the specific joystick.
            </summary>
      <param name="joystickNum">The joystick number.</param>
      <param name="axesCount">The number of axes to attach to the controller.</param>
    </member>
    <member name="M:HAL.Simulator.DriverStationHelper.SetJoystickAxis(System.Int32,System.Int32,System.Double)">
      <summary>
            Set the value for a specific joystick axis
            </summary>
      <param name="joystickNum">The joystick index [0..5]</param>
      <param name="axisNum">The axis number [0..n], set n using <see cref="M:HAL.Simulator.DriverStationHelper.SetJoystickAxesCount(System.Int32,System.Int32)" />.</param>
      <param name="value">The joystick value from -1.0 to 1.0</param>
    </member>
    <member name="M:HAL.Simulator.DriverStationHelper.SetJoystickButton(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Set the value for a specific joystick button
            </summary>
      <param name="joystickNum">The joystick index [0..5]</param>
      <param name="buttonNum">The button number [1..n], set n using <see cref="M:HAL.Simulator.DriverStationHelper.SetJoystickButtonCount(System.Int32,System.Int32)" />.</param>
      <param name="value">The button value</param>
    </member>
    <member name="M:HAL.Simulator.DriverStationHelper.SetJoystickButtonCount(System.Int32,System.Int32)">
      <summary>
            Sets the number of buttons on the specific joystick.
            </summary>
      <param name="joystickNum">The joystick number.</param>
      <param name="buttonCount">The number of buttons to attach to the controller.</param>
    </member>
    <member name="M:HAL.Simulator.DriverStationHelper.SetJoystickName(System.Int32,System.String)">
      <summary>
            Sets the joystick name.
            </summary>
      <param name="joystickNum">The joystick number</param>
      <param name="name">The name to attach to the joystick.</param>
    </member>
    <member name="M:HAL.Simulator.DriverStationHelper.SetJoystickPov(System.Int32,System.Int32,System.Int32)">
      <summary>
            Sets the value for a specific joystick POV, in degrees
            </summary>
      <param name="joystickNum">The joystick index [0..6].</param>
      <param name="povNum">The pov number [0..n], set n using <see cref="M:HAL.Simulator.DriverStationHelper.SetJoystickPovCount(System.Int32,System.Int32)" />.</param>
      <param name="povValue">The pov value (-1 if not pressed, degrees otherwise)</param>
    </member>
    <member name="M:HAL.Simulator.DriverStationHelper.SetJoystickPovCount(System.Int32,System.Int32)">
      <summary>
            Sets the number of povs on the specific joystick.
            </summary>
      <param name="joystickNum">The joystick number.</param>
      <param name="povCount">The number of povs to attach to the controller.</param>
    </member>
    <member name="M:HAL.Simulator.DriverStationHelper.SetRobotMode(HAL.Simulator.DriverStationHelper.RobotMode)">
      <summary>
            Sets the robot mode
            </summary>
      <param name="mode">The robot mode to set</param>
    </member>
    <member name="M:HAL.Simulator.DriverStationHelper.StartDSLoop">
      <summary>
            Start the driver station loop at the default 20ms interval
            </summary>
    </member>
    <member name="M:HAL.Simulator.DriverStationHelper.StartDSLoop(System.Int32)">
      <summary>
            Start the driver station loop at the requested interval
            </summary>
      <param name="loopTime">The loop interval in ms</param>
    </member>
    <member name="M:HAL.Simulator.DriverStationHelper.StartDSLoop(System.TimeSpan)">
      <summary>
            Start the driver station loop at the requested interval
            </summary>
      <param name="loopTime">The loop interval</param>
    </member>
    <member name="M:HAL.Simulator.DriverStationHelper.StopDSLoop">
      <summary>
            Stop the driver station loop
            </summary>
    </member>
    <member name="T:HAL.Simulator.DriverStationHelper.EnabledState">
      <summary>
            The robot enabled state
            </summary>
    </member>
    <member name="T:HAL.Simulator.DriverStationHelper.RobotMode"></member>
    <member name="T:HAL.Simulator.ISimulator">
      <summary>
            Interface for simulators
            </summary>
    </member>
    <member name="M:HAL.Simulator.ISimulator.Initialize">
      <summary>
            Called right before <see cref="M:HAL.Simulator.ISimulator.Start" />. Runs in the main thread, so must return.
            </summary>
    </member>
    <member name="P:HAL.Simulator.ISimulator.Name">
      <summary>
            The listing name for the simulator.
            </summary>
    </member>
    <member name="M:HAL.Simulator.ISimulator.Start">
      <summary>
            Main simulator entry method. Called in a seperate thread, so does not need to return.
            </summary>
    </member>
    <member name="T:HAL.Simulator.NotifyDict`2">
      <summary>
            This class allows us to listen for changes in a specific part of the dictionary. 
            </summary>
      <typeparam name="TKey">Please use dynamic</typeparam>
      <typeparam name="TValue">Please use dynamic</typeparam>
    </member>
    <member name="M:HAL.Simulator.NotifyDict`2.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.NotifyDict`2</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.NotifyDict`2.Cancel(`0,System.Action{System.Object,System.Object})">
      <summary>
            Cancel a notify function
            </summary>
      <param name="key">The key the function is waiting for</param>
      <param name="action">The callback function to cancel.</param>
    </member>
    <member name="P:HAL.Simulator.NotifyDict`2.Item(`0)">
      <summary>
            Gets or sets the value associated with the specified key. If a callback exists for the key, call it.
            </summary>
      <param name="key">The key of the value to get or set.</param>
      <returns>The value associated with the specified key.</returns>
    </member>
    <member name="M:HAL.Simulator.NotifyDict`2.Register(`0,System.Action{System.Object,System.Object},System.Boolean)">
      <summary>
            Register a notify function to get called when the field updates.
            </summary>
      <param name="key">The key to watch</param>
      <param name="action">The callback function</param>
      <param name="notify">Whether to notify immediately</param>
    </member>
    <member name="T:HAL.Simulator.SimData">
      <summary></summary>
    </member>
    <member name="M:HAL.Simulator.SimData.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.SimData</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:HAL.Simulator.SimData.Accelerometer">
      <summary>
            Gets the accelerometer data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.SimData.AnalogGyro"></member>
    <member name="P:HAL.Simulator.SimData.AnalogIn">
      <summary>
            Gets the analog in dada.
            </summary>
    </member>
    <member name="P:HAL.Simulator.SimData.AnalogOut">
      <summary>
            Gets the analog out data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.SimData.AnalogTrigger">
      <summary>
            Gets the analog trigger.
            </summary>
    </member>
    <member name="P:HAL.Simulator.SimData.DigitalPWM">
      <summary>
            Gets the digital PWM.
            </summary>
    </member>
    <member name="P:HAL.Simulator.SimData.DIO">
      <summary>
            Gets the dio.
            </summary>
    </member>
    <member name="P:HAL.Simulator.SimData.DriverStation">
      <summary>
            Gets the driver station.
            </summary>
    </member>
    <member name="P:HAL.Simulator.SimData.Encoder">
      <summary>
            Gets the encoder.
            </summary>
    </member>
    <member name="P:HAL.Simulator.SimData.PCM"></member>
    <member name="P:HAL.Simulator.SimData.PDP"></member>
    <member name="M:HAL.Simulator.SimData.PingAll"></member>
    <member name="P:HAL.Simulator.SimData.PWM">
      <summary></summary>
    </member>
    <member name="P:HAL.Simulator.SimData.Relay">
      <summary>
            Gets the relay.
            </summary>
    </member>
    <member name="P:HAL.Simulator.SimData.Reports">
      <summary>
            Gets the reports.
            </summary>
    </member>
    <member name="M:HAL.Simulator.SimData.ResetHALData(System.Boolean)">
      <summary>
            Clears all HAL Sim Data and resets it.
            </summary>
      <param name="resetDS">If true, resets the DS data sempahore.</param>
    </member>
    <member name="P:HAL.Simulator.SimData.RoboRioData">
      <summary>
            Gets the robo rio data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.SimData.SPIAccelerometer"></member>
    <member name="T:HAL.Simulator.SimHooks">
      <summary>
            This class contains static hooks that can be used by simulators to get specific Data.
            </summary>
    </member>
    <member name="M:HAL.Simulator.SimHooks.DelayMillis(System.Double)">
      <summary>
            Delays the current thread by a number of milliseconds.
            </summary>
      <param name="ms">Delay time</param>
    </member>
    <member name="M:HAL.Simulator.SimHooks.DelaySeconds(System.Double)">
      <summary>
            Delays the current thread by a number of seconds.
            </summary>
      <param name="s">Delay time</param>
    </member>
    <member name="M:HAL.Simulator.SimHooks.GetFPGATime">
      <summary>
            Gets the FPGA time.
            </summary>
      <returns>The FPGA time on a 10 nanosecond scale.</returns>
    </member>
    <member name="M:HAL.Simulator.SimHooks.GetFPGATimestamp">
      <summary>
            Gets the FPGA time in seconds.
            </summary>
      <returns>The FPGA time in seconds</returns>
    </member>
    <member name="M:HAL.Simulator.SimHooks.GetTime">
      <summary>
            Gets the current number of 100 nanosecond ticks from the system.
            </summary>
      <returns></returns>
    </member>
    <member name="T:HAL.Simulator.TalonSRXEventArgs"></member>
    <member name="M:HAL.Simulator.TalonSRXEventArgs.#ctor(System.Boolean)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.TalonSRXEventArgs</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:HAL.Simulator.TalonSRXEventArgs.Added"></member>
    <member name="T:HAL.Simulator.Data.DataBase">
      <summary>
            The data base, without a notifier
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.DataBase.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Data.DataBase</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.Data.DataBase.OnPropertyChanged(System.Object,System.String)">
      <summary>
            Called when any property is changed.
            </summary>
      <param name="value">The value.</param>
      <param name="propertyName">Name of the property.</param>
    </member>
    <member name="M:HAL.Simulator.Data.DataBase.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.DriverStationData">
      <summary>
            Driver Station Sim Data
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.DriverStationData.AllianceStation">
      <summary>
            Gets or sets the alliance station.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.DriverStationData.ControlData">
      <summary>
            Gets the control data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.DriverStationData.Joysticks">
      <summary>
            Gets the joysticks.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.DriverStationData.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.DSControlData">
      <summary>
            Driver Station Sim Control Data
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.DSControlData.Autonomous">
      <summary>
            Gets a value indicating whether this <see cref="T:HAL.Simulator.Data.DSControlData" /> is autonomous.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.DSControlData.DsAttached">
      <summary>
            Gets a value indicating whether [ds attached].
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.DSControlData.Enabled">
      <summary>
            Gets a value indicating whether this <see cref="T:HAL.Simulator.Data.DSControlData" /> is enabled.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.DSControlData.EStop">
      <summary>
            Gets a value indicating whether [e stop].
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.DSControlData.FmsAttached">
      <summary>
            Gets a value indicating whether [FMS attached].
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.DSControlData.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.DSControlData.Test">
      <summary>
            Gets a value indicating whether this <see cref="T:HAL.Simulator.Data.DSControlData" /> is test.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.HAL_NotifyCallback"></member>
    <member name="T:HAL.Simulator.Data.HAL_Type"></member>
    <member name="T:HAL.Simulator.Data.HAL_Value"></member>
    <member name="M:HAL.Simulator.Data.HAL_Value.GetBoolean"></member>
    <member name="M:HAL.Simulator.Data.HAL_Value.GetDouble"></member>
    <member name="M:HAL.Simulator.Data.HAL_Value.GetEnum"></member>
    <member name="M:HAL.Simulator.Data.HAL_Value.GetInt"></member>
    <member name="M:HAL.Simulator.Data.HAL_Value.GetLong"></member>
    <member name="M:HAL.Simulator.Data.HAL_Value.IsBoolean"></member>
    <member name="M:HAL.Simulator.Data.HAL_Value.IsDouble"></member>
    <member name="M:HAL.Simulator.Data.HAL_Value.IsEnum"></member>
    <member name="M:HAL.Simulator.Data.HAL_Value.IsInt"></member>
    <member name="M:HAL.Simulator.Data.HAL_Value.IsLong"></member>
    <member name="P:HAL.Simulator.Data.HAL_Value.IsUnassigned"></member>
    <member name="P:HAL.Simulator.Data.HAL_Value.Type"></member>
    <member name="T:HAL.Simulator.Data.HALSimAccelerometerData"></member>
    <member name="M:HAL.Simulator.Data.HALSimAccelerometerData.#ctor(System.Int32)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Data.HALSimAccelerometerData</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.Data.HALSimAccelerometerData.CancelActiveCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAccelerometerData.CancelRangeCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAccelerometerData.CancelXCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAccelerometerData.CancelYCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAccelerometerData.CancelZCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAccelerometerData.GetActive"></member>
    <member name="M:HAL.Simulator.Data.HALSimAccelerometerData.GetRange"></member>
    <member name="M:HAL.Simulator.Data.HALSimAccelerometerData.GetX"></member>
    <member name="M:HAL.Simulator.Data.HALSimAccelerometerData.GetY"></member>
    <member name="M:HAL.Simulator.Data.HALSimAccelerometerData.GetZ"></member>
    <member name="P:HAL.Simulator.Data.HALSimAccelerometerData.Index"></member>
    <member name="M:HAL.Simulator.Data.HALSimAccelerometerData.Ping"></member>
    <member name="M:HAL.Simulator.Data.HALSimAccelerometerData.RegisterActiveCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAccelerometerData.RegisterRangeCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAccelerometerData.RegisterXCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAccelerometerData.RegisterYCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAccelerometerData.RegisterZCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAccelerometerData.ResetData"></member>
    <member name="M:HAL.Simulator.Data.HALSimAccelerometerData.SetActive(System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAccelerometerData.SetRange(HAL.Base.HALAccelerometerRange)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAccelerometerData.SetX(System.Double)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAccelerometerData.SetY(System.Double)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAccelerometerData.SetZ(System.Double)"></member>
    <member name="T:HAL.Simulator.Data.HALSimAnalogGyroData"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogGyroData.#ctor(System.Int32)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Data.HALSimAnalogGyroData</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogGyroData.CancelAngleCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogGyroData.CancelInitializedCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogGyroData.CancelRateCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogGyroData.GetAngle"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogGyroData.GetInitialized"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogGyroData.GetRate"></member>
    <member name="P:HAL.Simulator.Data.HALSimAnalogGyroData.Index"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogGyroData.Ping"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogGyroData.RegisterAngleCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogGyroData.RegisterInitializedCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogGyroData.RegisterRateCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogGyroData.ResetData"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogGyroData.SetAngle(System.Double)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogGyroData.SetInitialized(System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogGyroData.SetRate(System.Double)"></member>
    <member name="T:HAL.Simulator.Data.HALSimAnalogInData"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.#ctor(System.Int32)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Data.HALSimAnalogInData</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.CancelAccumulatorCenterCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.CancelAccumulatorCountCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.CancelAccumulatorDeadbandCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.CancelAccumulatorInitializedCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.CancelAccumulatorValueCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.CancelAverageBitsCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.CancelInitializedCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.CancelOversampleBitsCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.CancelVoltageCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.GetAccumulatorCenter"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.GetAccumulatorCount"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.GetAccumulatorDeadband"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.GetAccumulatorInitialized"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.GetAccumulatorValue"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.GetAverageBits"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.GetInitialized"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.GetOversampleBits"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.GetVoltage"></member>
    <member name="P:HAL.Simulator.Data.HALSimAnalogInData.Index"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.Ping"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.RegisterAccumulatorCenterCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.RegisterAccumulatorCountCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.RegisterAccumulatorDeadbandCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.RegisterAccumulatorInitializedCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.RegisterAccumulatorValueCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.RegisterAverageBitsCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.RegisterInitializedCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.RegisterOversampleBitsCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.RegisterVoltageCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.ResetData"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.SetAccumulatorCenter(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.SetAccumulatorCount(System.Int64)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.SetAccumulatorDeadband(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.SetAccumulatorInitialized(System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.SetAccumulatorValue(System.Int64)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.SetAverageBits(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.SetInitialized(System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.SetOversampleBits(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogInData.SetVoltage(System.Double)"></member>
    <member name="T:HAL.Simulator.Data.HALSimAnalogOutData"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogOutData.#ctor(System.Int32)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Data.HALSimAnalogOutData</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogOutData.CancelInitializedCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogOutData.CancelVoltageCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogOutData.GetInitialized"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogOutData.GetVoltage"></member>
    <member name="P:HAL.Simulator.Data.HALSimAnalogOutData.Index"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogOutData.Ping"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogOutData.RegisterInitializedCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogOutData.RegisterVoltageCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogOutData.ResetData"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogOutData.SetInitialized(System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogOutData.SetVoltage(System.Double)"></member>
    <member name="T:HAL.Simulator.Data.HALSimAnalogTriggerData"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogTriggerData.#ctor(System.Int32)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Data.HALSimAnalogTriggerData</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogTriggerData.CancelInitializedCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogTriggerData.CancelTriggerLowerBoundCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogTriggerData.CancelTriggerModeCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogTriggerData.CancelTriggerUpperBoundCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogTriggerData.GetInitialized"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogTriggerData.GetTriggerLowerBound"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogTriggerData.GetTriggerMode"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogTriggerData.GetTriggerUpperBound"></member>
    <member name="P:HAL.Simulator.Data.HALSimAnalogTriggerData.Index"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogTriggerData.Ping"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogTriggerData.RegisterInitializedCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogTriggerData.RegisterTriggerLowerBoundCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogTriggerData.RegisterTriggerModeCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogTriggerData.RegisterTriggerUpperBoundCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogTriggerData.ResetData"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogTriggerData.SetInitialized(System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogTriggerData.SetTriggerLowerBound(System.Double)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogTriggerData.SetTriggerMode(HAL.Simulator.Data.HALSIMAnalogTriggerMode)"></member>
    <member name="M:HAL.Simulator.Data.HALSimAnalogTriggerData.SetTriggerUpperBound(System.Double)"></member>
    <member name="T:HAL.Simulator.Data.HALSIMAnalogTriggerMode"></member>
    <member name="T:HAL.Simulator.Data.HALSimDigitalPWMData"></member>
    <member name="M:HAL.Simulator.Data.HALSimDigitalPWMData.#ctor(System.Int32)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Data.HALSimDigitalPWMData</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.Data.HALSimDigitalPWMData.CancelDutyCycleCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimDigitalPWMData.CancelInitializedCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimDigitalPWMData.CancelPinCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimDigitalPWMData.GetDutyCycle"></member>
    <member name="M:HAL.Simulator.Data.HALSimDigitalPWMData.GetInitialized"></member>
    <member name="M:HAL.Simulator.Data.HALSimDigitalPWMData.GetPin"></member>
    <member name="P:HAL.Simulator.Data.HALSimDigitalPWMData.Index"></member>
    <member name="M:HAL.Simulator.Data.HALSimDigitalPWMData.Ping"></member>
    <member name="M:HAL.Simulator.Data.HALSimDigitalPWMData.RegisterDutyCycleCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimDigitalPWMData.RegisterInitializedCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimDigitalPWMData.RegisterPinCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimDigitalPWMData.ResetData"></member>
    <member name="M:HAL.Simulator.Data.HALSimDigitalPWMData.SetDutyCycle(System.Double)"></member>
    <member name="M:HAL.Simulator.Data.HALSimDigitalPWMData.SetInitialized(System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimDigitalPWMData.SetPin(System.Int32)"></member>
    <member name="T:HAL.Simulator.Data.HALSimDIOData"></member>
    <member name="M:HAL.Simulator.Data.HALSimDIOData.#ctor(System.Int32)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Data.HALSimDIOData</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.Data.HALSimDIOData.CancelFilterIndexCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimDIOData.CancelInitializedCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimDIOData.CancelIsInputCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimDIOData.CancelPulseLengthCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimDIOData.CancelValueCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimDIOData.GetFilterIndex"></member>
    <member name="M:HAL.Simulator.Data.HALSimDIOData.GetInitialized"></member>
    <member name="M:HAL.Simulator.Data.HALSimDIOData.GetIsInput"></member>
    <member name="M:HAL.Simulator.Data.HALSimDIOData.GetPulseLength"></member>
    <member name="M:HAL.Simulator.Data.HALSimDIOData.GetValue"></member>
    <member name="P:HAL.Simulator.Data.HALSimDIOData.Index"></member>
    <member name="M:HAL.Simulator.Data.HALSimDIOData.Ping"></member>
    <member name="M:HAL.Simulator.Data.HALSimDIOData.RegisterFilterIndexCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimDIOData.RegisterInitializedCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimDIOData.RegisterIsInputCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimDIOData.RegisterPulseLengthCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimDIOData.RegisterValueCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimDIOData.ResetData"></member>
    <member name="M:HAL.Simulator.Data.HALSimDIOData.SetFilterIndex(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimDIOData.SetInitialized(System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimDIOData.SetIsInput(System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimDIOData.SetPulseLength(System.Double)"></member>
    <member name="M:HAL.Simulator.Data.HALSimDIOData.SetValue(System.Boolean)"></member>
    <member name="T:HAL.Simulator.Data.HALSimEncoderData"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.#ctor(System.Int32)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Data.HALSimEncoderData</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.CancelCountCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.CancelDirectionCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.CancelInitializedCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.CancelMaxPeriodCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.CancelPeriodCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.CancelResetCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.CancelReverseDirectionCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.CancelSamplesToAverageCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.GetCount"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.GetDirection"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.GetInitialized"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.GetMaxPeriod"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.GetPeriod"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.GetReset"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.GetReverseDirection"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.GetSamplesToAverage"></member>
    <member name="P:HAL.Simulator.Data.HALSimEncoderData.Index"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.Ping"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.RegisterCountCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.RegisterDirectionCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.RegisterInitializedCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.RegisterMaxPeriodCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.RegisterPeriodCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.RegisterResetCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.RegisterReverseDirectionCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.RegisterSamplesToAverageCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.ResetData"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.SetCount(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.SetDirection(System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.SetInitialized(System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.SetMaxPeriod(System.Double)"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.SetPeriod(System.Double)"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.SetReset(System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.SetReverseDirection(System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimEncoderData.SetSamplesToAverage(System.Int32)"></member>
    <member name="T:HAL.Simulator.Data.HALSimPCMData"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.#ctor(System.Int32)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Data.HALSimPCMData</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.CancelClosedLoopEnabledCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.CancelCompressorCurrentCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.CancelCompressorInitializedCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.CancelCompressorOnCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.CancelPressureSwitchCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.CancelSolenoidInitializedCallback(System.Int32,System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.CancelSolenoidOutputCallback(System.Int32,System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.GetClosedLoopEnabled"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.GetCompressorCurrent"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.GetCompressorInitialized"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.GetCompressorOn"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.GetPressureSwitch"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.GetSolenoidInitialized(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.GetSolenoidOutput(System.Int32)"></member>
    <member name="P:HAL.Simulator.Data.HALSimPCMData.Index"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.Ping"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.RegisterClosedLoopEnabledCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.RegisterCompressorCurrentCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.RegisterCompressorInitializedCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.RegisterCompressorOnCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.RegisterPressureSwitchCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.RegisterSolenoidInitializedCallback(System.Int32,HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.RegisterSolenoidOutputCallback(System.Int32,HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.ResetData"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.SetClosedLoopEnabled(System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.SetCompressorCurrent(System.Double)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.SetCompressorInitialized(System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.SetCompressorOn(System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.SetPressureSwitch(System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.SetSolenoidInitialized(System.Int32,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPCMData.SetSolenoidOutput(System.Int32,System.Boolean)"></member>
    <member name="T:HAL.Simulator.Data.HALSimPDPData"></member>
    <member name="M:HAL.Simulator.Data.HALSimPDPData.#ctor(System.Int32)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Data.HALSimPDPData</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.Data.HALSimPDPData.CancelCurrentCallback(System.Int32,System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPDPData.CancelInitializedCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPDPData.CancelTemperatureCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPDPData.CancelVoltageCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPDPData.GetCurrent(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPDPData.GetInitialized"></member>
    <member name="M:HAL.Simulator.Data.HALSimPDPData.GetTemperature"></member>
    <member name="M:HAL.Simulator.Data.HALSimPDPData.GetVoltage"></member>
    <member name="P:HAL.Simulator.Data.HALSimPDPData.Index"></member>
    <member name="M:HAL.Simulator.Data.HALSimPDPData.Ping"></member>
    <member name="M:HAL.Simulator.Data.HALSimPDPData.RegisterCurrentCallback(System.Int32,HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPDPData.RegisterInitializedCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPDPData.RegisterTemperatureCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPDPData.RegisterVoltageCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPDPData.ResetData"></member>
    <member name="M:HAL.Simulator.Data.HALSimPDPData.SetCurrent(System.Int32,System.Double)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPDPData.SetInitialized(System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPDPData.SetTemperature(System.Double)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPDPData.SetVoltage(System.Double)"></member>
    <member name="T:HAL.Simulator.Data.HALSimPWMData"></member>
    <member name="M:HAL.Simulator.Data.HALSimPWMData.#ctor(System.Int32)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Data.HALSimPWMData</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.Data.HALSimPWMData.CancelInitializedCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPWMData.CancelPeriodScaleCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPWMData.CancelPositionCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPWMData.CancelRawValueCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPWMData.CancelSpeedCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPWMData.CancelZeroLatchCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPWMData.GetInitialized"></member>
    <member name="M:HAL.Simulator.Data.HALSimPWMData.GetPeriodScale"></member>
    <member name="M:HAL.Simulator.Data.HALSimPWMData.GetPosition"></member>
    <member name="M:HAL.Simulator.Data.HALSimPWMData.GetRawValue"></member>
    <member name="M:HAL.Simulator.Data.HALSimPWMData.GetSpeed"></member>
    <member name="M:HAL.Simulator.Data.HALSimPWMData.GetZeroLatch"></member>
    <member name="P:HAL.Simulator.Data.HALSimPWMData.Index"></member>
    <member name="M:HAL.Simulator.Data.HALSimPWMData.Ping"></member>
    <member name="M:HAL.Simulator.Data.HALSimPWMData.RegisterInitializedCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPWMData.RegisterPeriodScaleCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPWMData.RegisterPositionCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPWMData.RegisterRawValueCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPWMData.RegisterSpeedCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPWMData.RegisterZeroLatchCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPWMData.ResetData"></member>
    <member name="M:HAL.Simulator.Data.HALSimPWMData.SetInitialized(System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPWMData.SetPeriodScale(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPWMData.SetPosition(System.Double)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPWMData.SetRawValue(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPWMData.SetSpeed(System.Double)"></member>
    <member name="M:HAL.Simulator.Data.HALSimPWMData.SetZeroLatch(System.Boolean)"></member>
    <member name="T:HAL.Simulator.Data.HALSimRelayData"></member>
    <member name="M:HAL.Simulator.Data.HALSimRelayData.#ctor(System.Int32)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Data.HALSimRelayData</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.Data.HALSimRelayData.CancelForwardCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRelayData.CancelInitializedForwardCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRelayData.CancelInitializedReverseCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRelayData.CancelReverseCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRelayData.GetForward"></member>
    <member name="M:HAL.Simulator.Data.HALSimRelayData.GetInitializedForward"></member>
    <member name="M:HAL.Simulator.Data.HALSimRelayData.GetInitializedReverse"></member>
    <member name="M:HAL.Simulator.Data.HALSimRelayData.GetReverse"></member>
    <member name="P:HAL.Simulator.Data.HALSimRelayData.Index"></member>
    <member name="M:HAL.Simulator.Data.HALSimRelayData.Ping"></member>
    <member name="M:HAL.Simulator.Data.HALSimRelayData.RegisterForwardCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRelayData.RegisterInitializedForwardCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRelayData.RegisterInitializedReverseCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRelayData.RegisterReverseCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRelayData.ResetData"></member>
    <member name="M:HAL.Simulator.Data.HALSimRelayData.SetForward(System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRelayData.SetInitializedForward(System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRelayData.SetInitializedReverse(System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRelayData.SetReverse(System.Boolean)"></member>
    <member name="T:HAL.Simulator.Data.HALSimRoboRioData"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.#ctor(System.Int32)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Data.HALSimRoboRioData</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.CancelFPGAButtonCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.CancelUserActive3V3Callback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.CancelUserActive5VCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.CancelUserActive6VCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.CancelUserCurrent3V3Callback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.CancelUserCurrent5VCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.CancelUserCurrent6VCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.CancelUserFaults3V3Callback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.CancelUserFaults5VCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.CancelUserFaults6VCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.CancelUserVoltage3V3Callback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.CancelUserVoltage5VCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.CancelUserVoltage6VCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.CancelVInCurrentCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.CancelVInVoltageCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.GetFPGAButton"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.GetUserActive3V3"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.GetUserActive5V"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.GetUserActive6V"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.GetUserCurrent3V3"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.GetUserCurrent5V"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.GetUserCurrent6V"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.GetUserFaults3V3"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.GetUserFaults5V"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.GetUserFaults6V"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.GetUserVoltage3V3"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.GetUserVoltage5V"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.GetUserVoltage6V"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.GetVInCurrent"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.GetVInVoltage"></member>
    <member name="P:HAL.Simulator.Data.HALSimRoboRioData.Index"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.Ping"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.RegisterFPGAButtonCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.RegisterUserActive3V3Callback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.RegisterUserActive5VCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.RegisterUserActive6VCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.RegisterUserCurrent3V3Callback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.RegisterUserCurrent5VCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.RegisterUserCurrent6VCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.RegisterUserFaults3V3Callback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.RegisterUserFaults5VCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.RegisterUserFaults6VCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.RegisterUserVoltage3V3Callback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.RegisterUserVoltage5VCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.RegisterUserVoltage6VCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.RegisterVInCurrentCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.RegisterVInVoltageCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.ResetData"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.SetFPGAButton(System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.SetUserActive3V3(System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.SetUserActive5V(System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.SetUserActive6V(System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.SetUserCurrent3V3(System.Double)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.SetUserCurrent5V(System.Double)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.SetUserCurrent6V(System.Double)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.SetUserFaults3V3(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.SetUserFaults5V(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.SetUserFaults6V(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.SetUserVoltage3V3(System.Double)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.SetUserVoltage5V(System.Double)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.SetUserVoltage6V(System.Double)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.SetVInCurrent(System.Double)"></member>
    <member name="M:HAL.Simulator.Data.HALSimRoboRioData.SetVInVoltage(System.Double)"></member>
    <member name="T:HAL.Simulator.Data.HALSimSPIAccelerometerData"></member>
    <member name="M:HAL.Simulator.Data.HALSimSPIAccelerometerData.#ctor(System.Int32)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Data.HALSimSPIAccelerometerData</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.Data.HALSimSPIAccelerometerData.CancelActiveCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimSPIAccelerometerData.CancelRangeCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimSPIAccelerometerData.CancelXCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimSPIAccelerometerData.CancelYCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimSPIAccelerometerData.CancelZCallback(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimSPIAccelerometerData.GetActive"></member>
    <member name="M:HAL.Simulator.Data.HALSimSPIAccelerometerData.GetRange"></member>
    <member name="M:HAL.Simulator.Data.HALSimSPIAccelerometerData.GetX"></member>
    <member name="M:HAL.Simulator.Data.HALSimSPIAccelerometerData.GetY"></member>
    <member name="M:HAL.Simulator.Data.HALSimSPIAccelerometerData.GetZ"></member>
    <member name="P:HAL.Simulator.Data.HALSimSPIAccelerometerData.Index"></member>
    <member name="M:HAL.Simulator.Data.HALSimSPIAccelerometerData.Ping"></member>
    <member name="M:HAL.Simulator.Data.HALSimSPIAccelerometerData.RegisterActiveCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimSPIAccelerometerData.RegisterRangeCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimSPIAccelerometerData.RegisterXCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimSPIAccelerometerData.RegisterYCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimSPIAccelerometerData.RegisterZCallback(HAL.Simulator.Data.NotifyCallback,System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimSPIAccelerometerData.ResetData"></member>
    <member name="M:HAL.Simulator.Data.HALSimSPIAccelerometerData.SetActive(System.Boolean)"></member>
    <member name="M:HAL.Simulator.Data.HALSimSPIAccelerometerData.SetRange(System.Int32)"></member>
    <member name="M:HAL.Simulator.Data.HALSimSPIAccelerometerData.SetX(System.Double)"></member>
    <member name="M:HAL.Simulator.Data.HALSimSPIAccelerometerData.SetY(System.Double)"></member>
    <member name="M:HAL.Simulator.Data.HALSimSPIAccelerometerData.SetZ(System.Double)"></member>
    <member name="T:HAL.Simulator.Data.JoystickData">
      <summary>
            Joystick Sim Data
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.JoystickData.Axes">
      <summary>
            Gets the axes.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.JoystickData.Buttons">
      <summary>
            Gets the buttons.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.JoystickData.IsXbox">
      <summary>
            Gets the is xbox.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.JoystickData.LeftRumble">
      <summary>
            Gets the left rumble.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.JoystickData.Name">
      <summary>
            Gets the name.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.JoystickData.NumAxes">
      <summary>
            Gets the axes.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.JoystickData.NumButtons">
      <summary>
            Gets the buttons.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.JoystickData.NumPovs">
      <summary>
            Gets the axes.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.JoystickData.Povs">
      <summary>
            Gets the povs.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.JoystickData.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.JoystickData.RightRumble">
      <summary>
            Gets the right rumble.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.JoystickData.Type">
      <summary>
            Gets the type.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.NotifyCallback"></member>
    <member name="T:HAL.Simulator.Data.NotifyDataBase">
      <summary>
            Data base with a notifier
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.NotifyDataBase.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Data.NotifyDataBase</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.Data.NotifyDataBase.Cancel(System.String,System.Action{System.String,System.Object})">
      <summary>
            Cancel a notify function
            </summary>
      <param name="key">The key the function is waiting for</param>
      <param name="action">The callback function to cancel.</param>
    </member>
    <member name="M:HAL.Simulator.Data.NotifyDataBase.OnPropertyChanged(System.Object,System.String)">
      <summary>
            Called when any property is changed.
            </summary>
      <param name="value">The value.</param>
      <param name="propertyName">Name of the property.</param>
    </member>
    <member name="M:HAL.Simulator.Data.NotifyDataBase.Register(System.String,System.Action{System.String,System.Object},System.Boolean)">
      <summary>
            Registers the specified key with a callback.
            </summary>
      <param name="key">The key.</param>
      <param name="action">The callabac.</param>
      <param name="initialNotify">if set to <c>true</c> [initial notify].</param>
    </member>
    <member name="M:HAL.Simulator.Data.NotifyDataBase.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Extensions.ConversionExtensions">
      <summary>
            Extension methods that are used to easily convert numbers between units.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Extensions.ConversionExtensions.RadiansPerSecondToRpms(System.Double)">
      <summary>
            Converts Radians Per Second to Rotations Per Minute
            </summary>
      <param name="radiansPerSecond">Radians Per Second</param>
      <returns>Rotations Per Minute</returns>
    </member>
    <member name="M:HAL.Simulator.Extensions.ConversionExtensions.RpmsToRadiansPerSecond(System.Double)">
      <summary>
            Converts Rotations Per Minute to Radians Per Second.
            </summary>
      <param name="rpms">Rotations Per Minute</param>
      <returns>Radians Per Second</returns>
    </member>
    <member name="M:HAL.Simulator.Extensions.ConversionExtensions.ToDegrees(System.Double)">
      <summary>
            Converts radians to degrees.
            </summary>
      <param name="radians">Radians</param>
      <returns>Degrees</returns>
    </member>
    <member name="M:HAL.Simulator.Extensions.ConversionExtensions.ToInches(System.Double)">
      <summary>
            Meters to Inches.
            </summary>
      <param name="meters">Meters</param>
      <returns>Inches</returns>
    </member>
    <member name="M:HAL.Simulator.Extensions.ConversionExtensions.ToMeters(System.Double)">
      <summary>
            Inches to Meters.
            </summary>
      <param name="inches">Inches</param>
      <returns>Meters</returns>
    </member>
    <member name="M:HAL.Simulator.Extensions.ConversionExtensions.ToRadians(System.Double)">
      <summary>
            Converts degrees to radians.
            </summary>
      <param name="degrees">Degrees</param>
      <returns>Radians</returns>
    </member>
    <member name="T:HAL.Simulator.Inputs.EncodingType">
      <summary>
            Encoding Types for Counters and Encoders.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Inputs.IServoFeedback"></member>
    <member name="M:HAL.Simulator.Inputs.IServoFeedback.SetPosition(System.Double)"></member>
    <member name="M:HAL.Simulator.Inputs.IServoFeedback.SetRate(System.Double)"></member>
    <member name="T:HAL.Simulator.Inputs.SimAnalogGyro"></member>
    <member name="M:HAL.Simulator.Inputs.SimAnalogGyro.#ctor(System.Int32)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Inputs.SimAnalogGyro</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.Inputs.SimAnalogGyro.SetPosition(System.Double)"></member>
    <member name="M:HAL.Simulator.Inputs.SimAnalogGyro.SetRate(System.Double)"></member>
    <member name="T:HAL.Simulator.Inputs.SimAnalogInput"></member>
    <member name="M:HAL.Simulator.Inputs.SimAnalogInput.#ctor(System.Int32)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Inputs.SimAnalogInput</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.Inputs.SimAnalogInput.GetVoltage"></member>
    <member name="M:HAL.Simulator.Inputs.SimAnalogInput.SetPosition(System.Double)"></member>
    <member name="M:HAL.Simulator.Inputs.SimAnalogInput.SetRate(System.Double)"></member>
    <member name="T:HAL.Simulator.Inputs.SimDigitalInput"></member>
    <member name="M:HAL.Simulator.Inputs.SimDigitalInput.#ctor(System.Int32)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Inputs.SimDigitalInput</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.Inputs.SimDigitalInput.GetInput"></member>
    <member name="M:HAL.Simulator.Inputs.SimDigitalInput.Set(System.Boolean)"></member>
    <member name="T:HAL.Simulator.Inputs.SimEncoder"></member>
    <member name="M:HAL.Simulator.Inputs.SimEncoder.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Inputs.SimEncoder</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.Inputs.SimEncoder.SetPosition(System.Double)"></member>
    <member name="M:HAL.Simulator.Inputs.SimEncoder.SetRate(System.Double)"></member>
    <member name="T:HAL.Simulator.Mechanisms.AngularEncoderMechanism">
      <summary>
            This class is used to create a simulated arm that is driven by an encoder.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.AngularEncoderMechanism.#ctor(HAL.Simulator.Outputs.ISimSpeedController,HAL.Simulator.Inputs.SimEncoder,System.Double,HAL.Simulator.Outputs.DCMotor,System.Double,System.Boolean)">
      <summary>
            Creates a new arm which is driven by an encoder
            </summary>
      <param name="input">The motor driving the system</param>
      <param name="output">The encoder giving feedback to the system</param>
      <param name="encoderCPR">The CPR of the encoder. If not a 1:1 ratio on the axle, scale this beforehand</param>
      <param name="model">The transmission model to use</param>
      <param name="startRotations">The location in rotations you want the system to start at.</param>
      <param name="invertInput">Inverts the motor input</param>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.AngularEncoderMechanism.AdjustedRadians">
      <summary>
            Gets the current radians of the system offset by the homing location
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.AngularEncoderMechanism.AdjustedRotations">
      <summary>
            Gets the current rotations of the system offset by the homing location
            </summary>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.AngularEncoderMechanism.SetHomeLocation(HAL.Simulator.Inputs.SimDigitalInput,System.Boolean,System.Double,System.Double)">
      <summary>
            Sets the homing location for the system
            </summary>
      <param name="homeInput">The input to use for checking home</param>
      <param name="rising">Check on rising edge</param>
      <param name="radians">The radian to home at, in relation to starting radians</param>
      <param name="threshold">The threshold allowed to be considered in range</param>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.AngularEncoderMechanism.Update(System.Double)">
      <summary>
            Updates the system, checking for home and using the offset to get adjusted radians
            </summary>
      <param name="seconds">The seconds passed in the current iteration</param>
    </member>
    <member name="T:HAL.Simulator.Mechanisms.AngularPotentiometerMechanism">
      <summary>
            This class is used to create a simulated arm that is driven by a potentiometer.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.AngularPotentiometerMechanism.#ctor(HAL.Simulator.Outputs.ISimSpeedController,HAL.Simulator.Inputs.SimAnalogInput,HAL.Simulator.Outputs.DCMotor,System.Double,System.Double,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:HAL.Simulator.Mechanisms.AngularPotentiometerMechanism" /> class.
            </summary>
      <param name="input">The motor driving the system</param>
      <param name="output">The Analog Input giving feedback to the system..</param>
      <param name="model">The motor model.</param>
      <param name="startPercentage">The starting percentage of the potentiometer from 0.</param>
      <param name="potentiometerRotations">The number of rotations the potentiometer has.</param>
      <param name="invertInput">if set to <c>true</c> [invert input].</param>
    </member>
    <member name="T:HAL.Simulator.Mechanisms.DriveWheelMechanism">
      <summary></summary>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.DriveWheelMechanism.#ctor(HAL.Simulator.Outputs.DCMotor,HAL.Simulator.Outputs.ISimSpeedController,System.Double,System.Double,HAL.Simulator.Inputs.IServoFeedback,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:HAL.Simulator.Mechanisms.DriveWheelMechanism" /> class.
            </summary>
      <param name="motor">The motor.</param>
      <param name="input">The input.</param>
      <param name="wheelbaseXM">The wheelbase xm.</param>
      <param name="wheelDiameterM">The wheel diameter m.</param>
      <param name="output">The output.</param>
      <param name="wheelStaticCoef">The wheel static coef.</param>
      <param name="wheelDynamicCoef">The wheel dynamic coef.</param>
      <param name="staticFriction">The static friction.</param>
      <param name="dynamicFriction">The dynamic friction.</param>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.DriveWheelMechanism.#ctor(HAL.Simulator.Outputs.DCMotor,HAL.Simulator.Outputs.ISimSpeedController,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:HAL.Simulator.Mechanisms.DriveWheelMechanism" /> class.
            </summary>
      <param name="motor">The motor.</param>
      <param name="input">The input.</param>
      <param name="wheelbaseXM">The wheelbase xm.</param>
      <param name="wheelDiameterM">The wheel diameter m.</param>
      <param name="wheelStaticCoef">The wheel static coef.</param>
      <param name="wheelDynamicCoef">The wheel dynamic coef.</param>
      <param name="staticFriction">The static friction.</param>
      <param name="dynamicFriction">The dynamic friction.</param>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.DriveWheelMechanism.Acceleration">
      <summary>
            Gets or sets the acceleration.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.DriveWheelMechanism.DynamicCoef">
      <summary>
            Gets or sets the dynamic coef.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.DriveWheelMechanism.DynamicFriction">
      <summary>
            Gets or sets the dynamic friction.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.DriveWheelMechanism.ForceApplied">
      <summary>
            Gets or sets the force applied.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.DriveWheelMechanism.MassLoad">
      <summary>
            Gets or sets the mass load.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.DriveWheelMechanism.MotorPower">
      <summary>
            Gets or sets the motor power.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.DriveWheelMechanism.RPosition">
      <summary>
            Gets or sets the r position.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.DriveWheelMechanism.Slipping">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:HAL.Simulator.Mechanisms.DriveWheelMechanism" /> is slipping.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.DriveWheelMechanism.StaticCoef">
      <summary>
            Gets or sets the static coef.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.DriveWheelMechanism.StaticFriction">
      <summary>
            Gets or sets the static friction.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.DriveWheelMechanism.Type">
      <summary>
            Gets or sets the type.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.DriveWheelMechanism.Update(System.Double)"></member>
    <member name="M:HAL.Simulator.Mechanisms.DriveWheelMechanism.Update(System.Double,System.Double[],System.Double,System.Int32,System.Double[])">
      <summary>
            UUpdates the mechanism with the specified delta time
            </summary>
      <param name="seconds">The delta time in seconds.</param>
      <param name="driveAcceleration">The drive acceleration.</param>
      <param name="massKg">The mass kg.</param>
      <param name="numberOfWheels">The number of wheels.</param>
      <param name="botVel">The bot vel.</param>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.DriveWheelMechanism.WheelDiameter">
      <summary>
            Gets or sets the wheel diameter.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.DriveWheelMechanism.XPosition">
      <summary>
            Gets or sets the x position.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.DriveWheelMechanism.YPosition">
      <summary>
            Gets or sets the y position.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Mechanisms.FeedbackMechanismBase">
      <summary>
            The base class for all feedback mechanisms.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.FeedbackMechanismBase.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Mechanisms.FeedbackMechanismBase</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.FeedbackMechanismBase.CurrentMeters">
      <summary>
            Gets the current number of meters traveled using the Feedback Mechanism.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.FeedbackMechanismBase.CurrentRadians">
      <summary>
            Gets the current number of radians the motor has rotated from zero.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.FeedbackMechanismBase.CurrentRadiansPerSecond">
      <summary>
            Gets the current radians per second the mechanism is rotating at.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.FeedbackMechanismBase.CurrentRotations">
      <summary>
            Gets the current number of rotations the motor has rotated from zero.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.FeedbackMechanismBase.CurrentRotationsPerMinute">
      <summary>
            Gets the current rotations per minute the mechanism is rotating at.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.FeedbackMechanismBase.Deadzone">
      <summary>
            Gets or sets the deadzone for the motor to be considered stopped.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.FeedbackMechanismBase.Limit(System.Double)">
      <summary>
            Limits the input value to be between -1 and 1, and sets to 0 if between the <see cref="P:HAL.Simulator.Mechanisms.FeedbackMechanismBase.Deadzone" /></summary>
      <param name="pwmValue">The PWM value to check</param>
      <returns>The properly limited PWM value.</returns>
    </member>
    <member name="F:HAL.Simulator.Mechanisms.FeedbackMechanismBase.m_input">
      <summary>
            The motor input for the mechanism.
            </summary>
    </member>
    <member name="F:HAL.Simulator.Mechanisms.FeedbackMechanismBase.m_invert">
      <summary>
            True if the motor should be inverted when read.
            </summary>
    </member>
    <member name="F:HAL.Simulator.Mechanisms.FeedbackMechanismBase.m_maxRadians">
      <summary>
            The maximum radians allowed for the transmission output.
            </summary>
    </member>
    <member name="F:HAL.Simulator.Mechanisms.FeedbackMechanismBase.m_minRadians">
      <summary>
            The minimum radians allowed for the transmission output.
            </summary>
    </member>
    <member name="F:HAL.Simulator.Mechanisms.FeedbackMechanismBase.m_model">
      <summary>
            The motor and transmission model for the system.
            </summary>
    </member>
    <member name="F:HAL.Simulator.Mechanisms.FeedbackMechanismBase.m_output">
      <summary>
            The feedback output for the mechanism.
            </summary>
    </member>
    <member name="F:HAL.Simulator.Mechanisms.FeedbackMechanismBase.m_scaler">
      <summary>
            The number used to scale motor radians to sensor outputs properly.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.FeedbackMechanismBase.RadiansPerMeter">
      <summary>
            Gets or sets the Radians traveled per meter moved.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.FeedbackMechanismBase.RotationsPerMeter">
      <summary>
            Gets the rotations traveled per meter moved.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.FeedbackMechanismBase.Update(System.Double)">
      <summary>
            Updates the mechanism with the specified delta time
            </summary>
      <param name="seconds">The delta time in seconds.</param>
    </member>
    <member name="T:HAL.Simulator.Mechanisms.LinearEncoderMechanism">
      <summary>
            A simulator mechanism that can be used to run a linear system using an encoder.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.LinearEncoderMechanism.#ctor(HAL.Simulator.Outputs.ISimSpeedController,HAL.Simulator.Inputs.SimEncoder,System.Double,HAL.Simulator.Outputs.DCMotor,System.Double,System.Double,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:HAL.Simulator.Mechanisms.LinearEncoderMechanism" /> class.
            </summary>
      <param name="input">The motor driving the system.</param>
      <param name="output">The encoder giving feedback to the system.</param>
      <param name="encoderCpr">The CPR of the encoder. If not a 1:1 ratio on the axle, scale this beforehand.</param>
      <param name="model">The transmission model to use.</param>
      <param name="spoolRadius">The radius of your spool in Meters. (Use the radius of the up spool if using a cascade elevator).</param>
      <param name="startHeight">The start height of your elevator relative to the reset sensor in meters. If no reset sensor then use 0.</param>
      <param name="invertInput">if set to <c>true</c> [invert input].</param>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.LinearEncoderMechanism.SetHomeLocation(HAL.Simulator.Inputs.SimDigitalInput,System.Boolean,System.Double,System.Double)">
      <summary>
            Sets the homing sensor location.
            </summary>
      <param name="homeInput">The digital input to use for the homing sensor</param>
      <param name="rising">True if homing on the rising edge, otherwise false.</param>
      <param name="meters">The distance relative to your lowest elevator point the sensor is located at (in meters).</param>
      <param name="threshold">The threshold for which your encoder would trigger (in meters).</param>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.LinearEncoderMechanism.Update(System.Double)">
      <summary>
            Updates the mechanism with the specified delta time
            </summary>
      <param name="seconds">The delta time in seconds.</param>
    </member>
    <member name="T:HAL.Simulator.Mechanisms.LinearPotentiometerMechanism">
      <summary></summary>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.LinearPotentiometerMechanism.#ctor(HAL.Simulator.Outputs.ISimSpeedController,HAL.Simulator.Inputs.SimAnalogInput,HAL.Simulator.Outputs.DCMotor,System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:HAL.Simulator.Mechanisms.LinearPotentiometerMechanism" /> class.
            </summary>
      <param name="input">The motor driving the system.</param>
      <param name="output">The potentiometer giving feedback to the system.</param>
      <param name="model">The motor model with transmission to use.</param>
      <param name="startPercentage">The starting percentages of the potentiometer from 0.</param>
      <param name="stringTravel">The potentiometer travel scaled to be linear (in meters).</param>
      <param name="spoolRadius">The radius of your spool in Meters. (Use the radius of the up spool if using a cascade elevator).</param>
      <param name="invertInput">if set to <c>true</c> [invert input].</param>
    </member>
    <member name="T:HAL.Simulator.Mechanisms.ShooterWheelMechanism">
      <summary>
            Mechanism for simulating a shooter wheel.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.ShooterWheelMechanism.#ctor(HAL.Simulator.Outputs.ISimSpeedController,HAL.Simulator.Inputs.IServoFeedback,HAL.Simulator.Outputs.DCMotor,System.Boolean,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:HAL.Simulator.Mechanisms.ShooterWheelMechanism" /> class.
            </summary>
      <param name="input">The speed controller being used.</param>
      <param name="output">The feedback output.</param>
      <param name="model">The motor model.</param>
      <param name="invertInput">True if the input is inverted.</param>
      <param name="minimumVelocity">The minimum velocity in Rotations Per Minute</param>
      <param name="deaccelConstant">The deaccel constant in Rotations Per Minute</param>
      <param name="systemInertia">The system inertia in kg*m^2.</param>
      <param name="cpr">The counts per rotation of the sensor.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Shooter Wheels do not support analog inputs</exception>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.ShooterWheelMechanism.CurrentRadiansPerSecond">
      <summary>
            Gets or sets the current radians per second.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.ShooterWheelMechanism.CurrentRotationsPerMinute">
      <summary>
            Gets the current rotations per minute.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.ShooterWheelMechanism.DeaccelerationConstant">
      <summary>
            Gets or sets the deacceleration constant.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.ShooterWheelMechanism.Deadzone">
      <summary>
            Gets or sets the deadzone.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.ShooterWheelMechanism.Limit(System.Double)">
      <summary>
            Limits the specified PWM value.
            </summary>
      <param name="pwmValue">The PWM value.</param>
      <returns></returns>
    </member>
    <member name="F:HAL.Simulator.Mechanisms.ShooterWheelMechanism.m_cpr">
      <summary>
            The sensor CPR.
            </summary>
    </member>
    <member name="F:HAL.Simulator.Mechanisms.ShooterWheelMechanism.m_input">
      <summary>
            The motor driving the system.
            </summary>
    </member>
    <member name="F:HAL.Simulator.Mechanisms.ShooterWheelMechanism.m_invert">
      <summary>
            True if the input is inverted for your code.
            </summary>
    </member>
    <member name="F:HAL.Simulator.Mechanisms.ShooterWheelMechanism.m_minimumVelocity">
      <summary>
            The minimum velocity allowed for your shooter wheel. (radians per second)
            </summary>
    </member>
    <member name="F:HAL.Simulator.Mechanisms.ShooterWheelMechanism.m_model">
      <summary>
            The model of the motor and transmission for the system.
            </summary>
    </member>
    <member name="F:HAL.Simulator.Mechanisms.ShooterWheelMechanism.m_output">
      <summary>
            The feedback sensor for the system.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.ShooterWheelMechanism.SystemInertia">
      <summary>
            Gets or sets the system inertia.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.ShooterWheelMechanism.Update(System.Double)">
      <summary>
            Updates the mechanism with the specified delta time
            </summary>
      <param name="seconds">The delta time in seconds.</param>
    </member>
    <member name="T:HAL.Simulator.Mechanisms.TankDriveTrainMechanism"></member>
    <member name="M:HAL.Simulator.Mechanisms.TankDriveTrainMechanism.#ctor(HAL.Simulator.Mechanisms.DriveWheelMechanism,HAL.Simulator.Mechanisms.DriveWheelMechanism,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:HAL.Simulator.Mechanisms.TankDriveTrainMechanism" /> class.
            </summary>
      <param name="leftDrive">The left drive.</param>
      <param name="rightDrive">The right drive.</param>
      <param name="massKg">The mass kg.</param>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.TankDriveTrainMechanism.Update(System.Double)">
      <summary>
            Updates the mechanism with the specified delta time
            </summary>
      <param name="seconds">The delta sime in seconds.</param>
    </member>
    <member name="T:HAL.Simulator.Outputs.DCMotor"></member>
    <member name="M:HAL.Simulator.Outputs.DCMotor.#ctor(System.Double,System.Double)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Outputs.DCMotor</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:HAL.Simulator.Outputs.DCMotor.Efficiency"></member>
    <member name="M:HAL.Simulator.Outputs.DCMotor.MakeBag"></member>
    <member name="M:HAL.Simulator.Outputs.DCMotor.MakeCIM"></member>
    <member name="M:HAL.Simulator.Outputs.DCMotor.MakeMiniCIM"></member>
    <member name="M:HAL.Simulator.Outputs.DCMotor.MakeRS550"></member>
    <member name="M:HAL.Simulator.Outputs.DCMotor.MakeRS775"></member>
    <member name="M:HAL.Simulator.Outputs.DCMotor.MakeTransmission(HAL.Simulator.Outputs.DCMotor,System.Int32,System.Double,System.Double)"></member>
    <member name="P:HAL.Simulator.Outputs.DCMotor.MaxSpeed"></member>
    <member name="P:HAL.Simulator.Outputs.DCMotor.MaxTorque"></member>
    <member name="T:HAL.Simulator.Outputs.ISimSpeedController">
      <summary>
            Interface for working with Speed Controllers in the simulator
            </summary>
    </member>
    <member name="M:HAL.Simulator.Outputs.ISimSpeedController.Get">
      <summary>
            Gets the current value commanded by the robot to the motor.
            </summary>
      <returns>The current value commanded by the robot code.</returns>
    </member>
    <member name="T:HAL.Simulator.Outputs.SimAnalogOutput">
      <summary>
            Class for interfacing with an Analog Output in the simulator
            </summary>
    </member>
    <member name="M:HAL.Simulator.Outputs.SimAnalogOutput.#ctor(System.Int32)">
      <summary>
            Creates a new Sim Analog Output reader.
            </summary>
      <param name="pin">The analog output pin to use.</param>
    </member>
    <member name="M:HAL.Simulator.Outputs.SimAnalogOutput.Get">
      <summary>
            Gets the current voltage of the Analog Output.
            </summary>
      <returns>The voltage commanded by the robot.</returns>
    </member>
    <member name="T:HAL.Simulator.Outputs.SimDigitalOutput">
      <summary>
            Class for interfacing with a Digital Output in the simulator
            </summary>
    </member>
    <member name="M:HAL.Simulator.Outputs.SimDigitalOutput.#ctor(System.Int32)">
      <summary>
            Creates a new Sim Digital Output reader.
            </summary>
      <param name="pin">The digital output pin to use.</param>
    </member>
    <member name="M:HAL.Simulator.Outputs.SimDigitalOutput.Get">
      <summary>
            Gets the current value of the Digital Output.
            </summary>
      <returns>The current value of the output.</returns>
    </member>
    <member name="T:HAL.Simulator.Outputs.SimPWMController">
      <summary>
            Class for interfacing with all PWM speed controllers.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Outputs.SimPWMController.#ctor(System.Int32)">
      <summary>
            Creates a new PWM Speed controller for the Sim to use.
            </summary>
      <param name="port">The PWM port the Speed controller is attached to.</param>
    </member>
    <member name="M:HAL.Simulator.Outputs.SimPWMController.Get">
      <summary>
            Gets the current value commanded by the robot to the motor.
            </summary>
      <returns>The current value commanded by the robot code.</returns>
    </member>
    <member name="T:HAL.Simulator.Outputs.SimRelay">
      <summary>
            Class for interfacing with Relays in the simulator.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Outputs.SimRelay.#ctor(System.Int32)">
      <summary>
            Creates a new Relay to use with the simulator.
            </summary>
      <param name="port">The relay port to read.</param>
    </member>
    <member name="M:HAL.Simulator.Outputs.SimRelay.GetForward">
      <summary>
            Gets if the relay forward is set.
            </summary>
      <returns>True if forward is set.</returns>
    </member>
    <member name="M:HAL.Simulator.Outputs.SimRelay.GetReverse">
      <summary>
            Gets if the relay reverse is set.
            </summary>
      <returns>True if reverse is set.</returns>
    </member>
  </members>
</doc>